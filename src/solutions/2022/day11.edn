{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Problem", :emoji nil, :path "#problem", :items []} {:title "Solution", :emoji nil, :path "#solution", :items [{:title "Parse a monkey", :emoji nil, :path "#parse-a-monkey", :items []} {:title "Compute an inspection", :emoji nil, :path "#compute-an-inspection", :items []} {:title "Move items for monkeys", :emoji nil, :path "#move-items-for-monkeys", :items []} {:title "Advance a round", :emoji nil, :path "#advance-a-round", :items []} {:title "Advance all rounds", :emoji nil, :path "#advance-all-rounds", :items []} {:title "Compute the score", :emoji nil, :path "#compute-the-score", :items []} {:title "Part 1", :emoji nil, :path "#part-1", :items []} {:title "Part 2", :emoji nil, :path "#part-2", :items []}]}], :nextjournal/render-opts {:toc-visibility true, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility true, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns solutions.2022.day11), :file "src/solutions/2022/day11.clj", :scope solutions.2022.day11, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://github.com/elken/aoc/blob/bd895bc5f8c90dd5410e8b3b0961957be484e2dd/src/solutions/2022/day11.clj"} "src/solutions/2022/day11.clj" [:<> "@" [:span.tabular-nums "bd895bc"]]]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Problem", :description "Seems as if the Advent of Code Gods are nice to us on weekends, this one was relatively simple and quite fun. As is the case with these kinds of puzzles, it took me longer to parse the input than to solve it."}, :title "Problem", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"} ["h1" {:id "problem"} [:<> "Problem"]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div {:dangerouslySetInnerHTML {:__html "<article class=\"day-desc\"><h2>--- Day 11: Monkey in the Middle ---</h2><p>As you finally start making your way upriver, you realize your pack is much lighter than you remember. Just then, one of the items from your pack goes flying overhead. Monkeys are playing <a href=\"https://en.wikipedia.org/wiki/Keep_away\" target=\"_blank\">Keep Away</a> with your missing things!</p>\n<p>To get your stuff back, you need to be able to predict where the monkeys will throw your items. After some careful observation, you realize the monkeys operate based on <em>how worried you are about each item</em>.</p>\n<p>You take some notes (your puzzle input) on the items each monkey currently has, how worried you are about those items, and how the monkey makes decisions based on your worry level. For example:</p>\n<pre><code>Monkey 0:\n  Starting items: 79, 98\n  Operation: new = old * 19\n  Test: divisible by 23\n    If true: throw to monkey 2\n    If false: throw to monkey 3\n\nMonkey 1:\n  Starting items: 54, 65, 75, 74\n  Operation: new = old + 6\n  Test: divisible by 19\n    If true: throw to monkey 2\n    If false: throw to monkey 0\n\nMonkey 2:\n  Starting items: 79, 60, 97\n  Operation: new = old * old\n  Test: divisible by 13\n    If true: throw to monkey 1\n    If false: throw to monkey 3\n\nMonkey 3:\n  Starting items: 74\n  Operation: new = old + 3\n  Test: divisible by 17\n    If true: throw to monkey 0\n    If false: throw to monkey 1\n</code></pre>\n<p>Each monkey has several attributes:</p>\n<ul>\n<li><code>Starting items</code> lists your <em>worry level</em> for each item the monkey is currently holding in the order they will be inspected.</li>\n<li><code>Operation</code> shows how your worry level changes as that monkey inspects an item. (An operation like <code>new = old * 5</code> means that your worry level after the monkey inspected the item is five times whatever your worry level was before inspection.)</li>\n<li><code>Test</code> shows how the monkey uses your worry level to decide where to throw an item next.\n  <ul>\n  <li><code>If true</code> shows what happens with an item if the <code>Test</code> was true.</li>\n  <li><code>If false</code> shows what happens with an item if the <code>Test</code> was false.</li>\n  </ul>\n</li>\n</ul>\n<p>After each monkey inspects an item but before it tests your worry level, your relief that the monkey's inspection didn't damage the item causes your worry level to be <em>divided by three</em> and rounded down to the nearest integer.</p>\n<p>The monkeys take turns inspecting and throwing items. On a single monkey's <em>turn</em>, it inspects and throws all of the items it is holding one at a time and in the order listed. Monkey <code>0</code> goes first, then monkey <code>1</code>, and so on until each monkey has had one turn. The process of each monkey taking a single turn is called a <em>round</em>.</p>\n<p>When a monkey throws an item to another monkey, the item goes on the <em>end</em> of the recipient monkey's list. A monkey that starts a round with no items could end up inspecting and throwing many items by the time its turn comes around. If a monkey is holding no items at the start of its turn, its turn ends.</p>\n<p>In the above example, the first round proceeds as follows:</p>\n<pre><code>Monkey 0:\n  Monkey inspects an item with a worry level of 79.\n    Worry level is multiplied by 19 to 1501.\n    Monkey gets bored with item. Worry level is divided by 3 to 500.\n    Current worry level is not divisible by 23.\n    Item with worry level 500 is thrown to monkey 3.\n  Monkey inspects an item with a worry level of 98.\n    Worry level is multiplied by 19 to 1862.\n    Monkey gets bored with item. Worry level is divided by 3 to 620.\n    Current worry level is not divisible by 23.\n    Item with worry level 620 is thrown to monkey 3.\nMonkey 1:\n  Monkey inspects an item with a worry level of 54.\n    Worry level increases by 6 to 60.\n    Monkey gets bored with item. Worry level is divided by 3 to 20.\n    Current worry level is not divisible by 19.\n    Item with worry level 20 is thrown to monkey 0.\n  Monkey inspects an item with a worry level of 65.\n    Worry level increases by 6 to 71.\n    Monkey gets bored with item. Worry level is divided by 3 to 23.\n    Current worry level is not divisible by 19.\n    Item with worry level 23 is thrown to monkey 0.\n  Monkey inspects an item with a worry level of 75.\n    Worry level increases by 6 to 81.\n    Monkey gets bored with item. Worry level is divided by 3 to 27.\n    Current worry level is not divisible by 19.\n    Item with worry level 27 is thrown to monkey 0.\n  Monkey inspects an item with a worry level of 74.\n    Worry level increases by 6 to 80.\n    Monkey gets bored with item. Worry level is divided by 3 to 26.\n    Current worry level is not divisible by 19.\n    Item with worry level 26 is thrown to monkey 0.\nMonkey 2:\n  Monkey inspects an item with a worry level of 79.\n    Worry level is multiplied by itself to 6241.\n    Monkey gets bored with item. Worry level is divided by 3 to 2080.\n    Current worry level is divisible by 13.\n    Item with worry level 2080 is thrown to monkey 1.\n  Monkey inspects an item with a worry level of 60.\n    Worry level is multiplied by itself to 3600.\n    Monkey gets bored with item. Worry level is divided by 3 to 1200.\n    Current worry level is not divisible by 13.\n    Item with worry level 1200 is thrown to monkey 3.\n  Monkey inspects an item with a worry level of 97.\n    Worry level is multiplied by itself to 9409.\n    Monkey gets bored with item. Worry level is divided by 3 to 3136.\n    Current worry level is not divisible by 13.\n    Item with worry level 3136 is thrown to monkey 3.\nMonkey 3:\n  Monkey inspects an item with a worry level of 74.\n    Worry level increases by 3 to 77.\n    Monkey gets bored with item. Worry level is divided by 3 to 25.\n    Current worry level is not divisible by 17.\n    Item with worry level 25 is thrown to monkey 1.\n  Monkey inspects an item with a worry level of 500.\n    Worry level increases by 3 to 503.\n    Monkey gets bored with item. Worry level is divided by 3 to 167.\n    Current worry level is not divisible by 17.\n    Item with worry level 167 is thrown to monkey 1.\n  Monkey inspects an item with a worry level of 620.\n    Worry level increases by 3 to 623.\n    Monkey gets bored with item. Worry level is divided by 3 to 207.\n    Current worry level is not divisible by 17.\n    Item with worry level 207 is thrown to monkey 1.\n  Monkey inspects an item with a worry level of 1200.\n    Worry level increases by 3 to 1203.\n    Monkey gets bored with item. Worry level is divided by 3 to 401.\n    Current worry level is not divisible by 17.\n    Item with worry level 401 is thrown to monkey 1.\n  Monkey inspects an item with a worry level of 3136.\n    Worry level increases by 3 to 3139.\n    Monkey gets bored with item. Worry level is divided by 3 to 1046.\n    Current worry level is not divisible by 17.\n    Item with worry level 1046 is thrown to monkey 1.\n</code></pre>\n<p>After round 1, the monkeys are holding items with these worry levels:</p>\n<pre><code>Monkey 0: 20, 23, 27, 26\nMonkey 1: 2080, 25, 167, 207, 401, 1046\nMonkey 2: \nMonkey 3: \n</code></pre>\n<p>Monkeys 2 and 3 aren't holding any items at the end of the round; they both inspected items during the round and threw them all before the round ended.</p>\n<p>This process continues for a few more rounds:</p>\n<pre><code>After round 2, the monkeys are holding items with these worry levels:\nMonkey 0: 695, 10, 71, 135, 350\nMonkey 1: 43, 49, 58, 55, 362\nMonkey 2: \nMonkey 3: \n\nAfter round 3, the monkeys are holding items with these worry levels:\nMonkey 0: 16, 18, 21, 20, 122\nMonkey 1: 1468, 22, 150, 286, 739\nMonkey 2: \nMonkey 3: \n\nAfter round 4, the monkeys are holding items with these worry levels:\nMonkey 0: 491, 9, 52, 97, 248, 34\nMonkey 1: 39, 45, 43, 258\nMonkey 2: \nMonkey 3: \n\nAfter round 5, the monkeys are holding items with these worry levels:\nMonkey 0: 15, 17, 16, 88, 1037\nMonkey 1: 20, 110, 205, 524, 72\nMonkey 2: \nMonkey 3: \n\nAfter round 6, the monkeys are holding items with these worry levels:\nMonkey 0: 8, 70, 176, 26, 34\nMonkey 1: 481, 32, 36, 186, 2190\nMonkey 2: \nMonkey 3: \n\nAfter round 7, the monkeys are holding items with these worry levels:\nMonkey 0: 162, 12, 14, 64, 732, 17\nMonkey 1: 148, 372, 55, 72\nMonkey 2: \nMonkey 3: \n\nAfter round 8, the monkeys are holding items with these worry levels:\nMonkey 0: 51, 126, 20, 26, 136\nMonkey 1: 343, 26, 30, 1546, 36\nMonkey 2: \nMonkey 3: \n\nAfter round 9, the monkeys are holding items with these worry levels:\nMonkey 0: 116, 10, 12, 517, 14\nMonkey 1: 108, 267, 43, 55, 288\nMonkey 2: \nMonkey 3: \n\nAfter round 10, the monkeys are holding items with these worry levels:\nMonkey 0: 91, 16, 20, 98\nMonkey 1: 481, 245, 22, 26, 1092, 30\nMonkey 2: \nMonkey 3: \n\n...\n\nAfter round 15, the monkeys are holding items with these worry levels:\nMonkey 0: 83, 44, 8, 184, 9, 20, 26, 102\nMonkey 1: 110, 36\nMonkey 2: \nMonkey 3: \n\n...\n\nAfter round 20, the monkeys are holding items with these worry levels:\nMonkey 0: 10, 12, 14, 26, 34\nMonkey 1: 245, 93, 53, 199, 115\nMonkey 2: \nMonkey 3: \n</code></pre>\n<p>Chasing all of the monkeys at once is impossible; you're going to have to focus on the <em>two most active</em> monkeys if you want any hope of getting your stuff back. Count the <em>total number of times each monkey inspects items</em> over 20 rounds:</p>\n<pre><code><em>Monkey 0 inspected items 101 times.</em>\nMonkey 1 inspected items 95 times.\nMonkey 2 inspected items 7 times.\n<em>Monkey 3 inspected items 105 times.</em>\n</code></pre>\n<p>In this example, the two most active monkeys inspected items 101 and 105 times. The level of <em>monkey business</em> in this situation can be found by multiplying these together: <code><em>10605</em></code>.</p>\n<p>Figure out which monkeys to chase by counting how many items they inspect over 20 rounds. <em>What is the level of monkey business after 20 rounds of stuff-slinging simian shenanigans?</em></p>\n</article><article class=\"day-desc\"><h2 id=\"part2\">--- Part Two ---</h2><p>You're worried you might not ever get your items back. So worried, in fact, that your relief that a monkey's inspection didn't damage an item <em>no longer causes your worry level to be divided by three</em>.</p>\n<p>Unfortunately, that relief was all that was keeping your worry levels from reaching <em>ridiculous levels</em>. You'll need to <em>find another way to keep your worry levels manageable</em>.</p>\n<p>At this rate, you might be putting up with these monkeys for a <em>very long time</em> - possibly <em><code>10000</code> rounds</em>!</p>\n<p>With these new rules, you can still figure out the <span title=\"Monkey business monkey business monkey business, monkey numbers... is this working?\">monkey business</span> after 10000 rounds. Using the same example above:</p>\n<pre><code>== After round 1 ==\nMonkey 0 inspected items 2 times.\nMonkey 1 inspected items 4 times.\nMonkey 2 inspected items 3 times.\nMonkey 3 inspected items 6 times.\n\n== After round 20 ==\nMonkey 0 inspected items 99 times.\nMonkey 1 inspected items 97 times.\nMonkey 2 inspected items 8 times.\nMonkey 3 inspected items 103 times.\n\n== After round 1000 ==\nMonkey 0 inspected items 5204 times.\nMonkey 1 inspected items 4792 times.\nMonkey 2 inspected items 199 times.\nMonkey 3 inspected items 5192 times.\n\n== After round 2000 ==\nMonkey 0 inspected items 10419 times.\nMonkey 1 inspected items 9577 times.\nMonkey 2 inspected items 392 times.\nMonkey 3 inspected items 10391 times.\n\n== After round 3000 ==\nMonkey 0 inspected items 15638 times.\nMonkey 1 inspected items 14358 times.\nMonkey 2 inspected items 587 times.\nMonkey 3 inspected items 15593 times.\n\n== After round 4000 ==\nMonkey 0 inspected items 20858 times.\nMonkey 1 inspected items 19138 times.\nMonkey 2 inspected items 780 times.\nMonkey 3 inspected items 20797 times.\n\n== After round 5000 ==\nMonkey 0 inspected items 26075 times.\nMonkey 1 inspected items 23921 times.\nMonkey 2 inspected items 974 times.\nMonkey 3 inspected items 26000 times.\n\n== After round 6000 ==\nMonkey 0 inspected items 31294 times.\nMonkey 1 inspected items 28702 times.\nMonkey 2 inspected items 1165 times.\nMonkey 3 inspected items 31204 times.\n\n== After round 7000 ==\nMonkey 0 inspected items 36508 times.\nMonkey 1 inspected items 33488 times.\nMonkey 2 inspected items 1360 times.\nMonkey 3 inspected items 36400 times.\n\n== After round 8000 ==\nMonkey 0 inspected items 41728 times.\nMonkey 1 inspected items 38268 times.\nMonkey 2 inspected items 1553 times.\nMonkey 3 inspected items 41606 times.\n\n== After round 9000 ==\nMonkey 0 inspected items 46945 times.\nMonkey 1 inspected items 43051 times.\nMonkey 2 inspected items 1746 times.\nMonkey 3 inspected items 46807 times.\n\n== After round 10000 ==\n<em>Monkey 0 inspected items 52166 times.</em>\nMonkey 1 inspected items 47830 times.\nMonkey 2 inspected items 1938 times.\n<em>Monkey 3 inspected items 52013 times.</em>\n</code></pre>\n<p>After 10000 rounds, the two most active monkeys inspected items 52166 and 52013 times. Multiplying these together, the level of <em>monkey business</em> in this situation is now <code><em>2713310158</em></code>.</p>\n<p>Worry levels are no longer divided by three after each item is inspected; you'll need to find another way to keep your worry levels manageable. Starting again from the initial state in your puzzle input, <em>what is the level of monkey business after 10000 rounds?</em></p>\n</article>"}}], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "solutions.2022.day11/anon-expr-5dtmnzhftnKwMMGVXv4DXFmyDXRuLM-result"}}, :nextjournal/blob-id "5drsrddRwWsJeGTLHQkuw6kxhZ36tA"}, :nextjournal/render-opts {:id "solutions.2022.day11/anon-expr-5dtmnzhftnKwMMGVXv4DXFmyDXRuLM-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5du9zRcBgLbp2vBGrjZXsxWUjLifud"} ["h1" {:id "solution"} [:<> "Solution"]] [:p [:<> "Seems as if the Advent of Code Gods are nice to us on weekends, this one was"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:em [:<> "relatively"]] [:<> " simple and quite fun. As is the case with these kinds of"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "puzzles, it took me longer to parse the input than to solve it."]] [:p [:<> "Today we're tasked with some monkey shenanigans. Given an input of starting"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "conditions and a number of rules, advance the state a number of times and"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "compute a result. These rules are:"]] [:ul [:li [:<> [:<> "The monkey begins with a list of worry levels for given items; "] [:code [:<> "Starting items"]]]] [:li [:<> [:code [:<> "Operation"]] [:<> " is what change happens to the worry level of each item during each step"]]] [:li [:<> [:code [:<> "Test"]] [:<> " creates a boolean condition which moves that item to a given monkey"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "if the test passes"]]] [:li [:<> [:<> "For part 1, "] [:em [:<> "after"]] [:<> " the monkey inspects it but "] [:em [:<> "before"]] [:<> " it tests your worry"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "level, the worry level is divided by 3"]]] [:li [:<> [:<> "The number of times a monkey has inspected an item has to be tracked"]]]] [:p [:<> "A round consists of iterating through each monkey and performing operations."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "Part 1 we run through 20 rounds and part 2 we run through 10,000 rounds (more"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "on that in part 2). After a round, multiply the two biggest inspection totals"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "and that's the answer."]] ["h2" {:id "parse-a-monkey"} [:<> "Parse a monkey"]] [:p [:<> "First things first, let's load our input and parse it"]] [:p [:<> "This is probably bordering in the edge of needing something like"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:a {:href "https://github.com/Engelberg/instaparse"} [:<> "Instaparse"]] [:<> " but I'm trying to limit"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "myself to clojure.core dependencies only (outside of clerk for the notebook"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "and a few others for clerk utilities)"]] [:p [:<> "First we have the function that, given a vector of lines, returns a valid"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "initial state for a monkey."]] [:ul [:li [:<> [:<> "First line is used to set the initial inspected value"]]] [:li [:<> [:<> "Then we translate the starting numbers to a list"]]] [:li [:<> [:<> "Then we create a worry function that takes the old value and uses "] [:code [:<> "resolve"]] [:<> " and "] [:code [:<> "symbol"]] [:<> " to return a function"]]] [:li [:<> [:<> "Lastly we create the conditions for the movement later"]]]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5du9zRcBgLbp2vBGrjZXsxWUjLifud"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn parse-monkey [monkey]\n  (reduce (fn [m line]\n            (apply assoc m\n                   (match/match [(str/split (str/trim line) #\" \")]\n                     [[\"Monkey\" _]] [:inspected 0]\n                     [([\"Starting\" \"items:\" & items] :seq)] [:items (map (comp parse-long (partial re-find #\"\\d+\")) items)]\n                     [[\"Operation:\" _ _ _ op val]] [:worry-fn (fn [old] ((resolve (symbol op)) old (if (= \"old\" val) old (parse-long val))))]\n                     [[\"Test:\" \"divisible\" \"by\" n]] [:divisible-by (parse-long n)]\n                     [[\"If\" \"true:\" \"throw\" \"to\" \"monkey\" n]] [:on-true (parse-long n)]\n                     [[\"If\" \"false:\" \"throw\" \"to\" \"monkey\" n]] [:on-false (parse-long n)])))\n          {}\n          monkey))", :nextjournal/render-opts {:loc {:line 55, :end-line 66, :column 1, :end-column 19}, :id "solutions.2022.day11/parse-monkey-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5dt9YVCpthi6up8L8FaFCQuKRnzuWw"} [:p [:<> "Lastly, parse our input"]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5dt9YVCpthi6up8L8FaFCQuKRnzuWw"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def input (->> (slurp (io/resource \"inputs/2022/day11.txt\")) ;; Load the resource\n                str/split-lines                               ;; Split into lines\n                (partition-by #(str/blank? %))                ;; Partition by blank lines (which gives of a vector of monkey lines)\n                (remove #(= % '(\"\")))                         ;; Remove the empty lines\n                (mapv parse-monkey)))                         ;; Parse the monkey lines and return a vector (needed for `assoc`)", :nextjournal/render-opts {:loc {:line 69, :end-line 73, :column 1, :end-column 38}, :id "solutions.2022.day11/input-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5dt2eNiC2GXeVcAA3SgusLqBTcQkvr"} [:p [:<> "Great, we have our vector of initial monkeys!"]] ["h2" {:id "compute-an-inspection"} [:<> "Compute an inspection"]] [:p [:<> "Next, we need to compute the inspection."]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5dt2eNiC2GXeVcAA3SgusLqBTcQkvr"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn inspect [monkey inspect-fn item]\n  ((comp int math/floor inspect-fn (:worry-fn monkey)) item))", :nextjournal/render-opts {:loc {:line 80, :end-line 81, :column 1, :end-column 62}, :id "solutions.2022.day11/inspect-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5dtHLrhm1cdu3h4MzSDmczjaZzyPnd"} [:p [:<> "Now we have to create something to move the items for a given monkey index."]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5dtHLrhm1cdu3h4MzSDmczjaZzyPnd"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(:items (first input))", :nextjournal/render-opts {:loc {:line 85, :end-line 85, :column 1, :end-column 23}, :id "solutions.2022.day11/anon-expr-5dsHKuyCw1i6Q6EVyNPGccCXvVZJQy-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value 50, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1], :nextjournal/value 70, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 2], :nextjournal/value 89, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 3], :nextjournal/value 75, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 4], :nextjournal/value 66, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 5], :nextjournal/value 66, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}, :nextjournal/render-opts {:id "solutions.2022.day11/anon-expr-5dsHKuyCw1i6Q6EVyNPGccCXvVZJQy-result-1"}}, :nextjournal/blob-id "5dtpDyFaFf5mxkPWHeqTg2PY29PDEW"}, :nextjournal/render-opts {:id "solutions.2022.day11/anon-expr-5dsHKuyCw1i6Q6EVyNPGccCXvVZJQy-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5dsFtTPWPnW68aw57yWx4Pjk1U5UBK"} [:p [:<> "First we compute all the inspect values"]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5dsFtTPWPnW68aw57yWx4Pjk1U5UBK"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(map (partial inspect (first input) (fn [old] (/ old 3))) (:items (first input)))", :nextjournal/render-opts {:loc {:line 88, :end-line 88, :column 1, :end-column 82}, :id "solutions.2022.day11/anon-expr-5drBjLRrnhUyVkKdsE98K63yfq3Yzz-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value 83, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1], :nextjournal/value 116, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 2], :nextjournal/value 148, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 3], :nextjournal/value 125, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 4], :nextjournal/value 110, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 5], :nextjournal/value 110, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}, :nextjournal/render-opts {:id "solutions.2022.day11/anon-expr-5drBjLRrnhUyVkKdsE98K63yfq3Yzz-result-1"}}, :nextjournal/blob-id "5duDsveNevh7YpHpQAt6aSgitn6XSh"}, :nextjournal/render-opts {:id "solutions.2022.day11/anon-expr-5drBjLRrnhUyVkKdsE98K63yfq3Yzz-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5dqpVcsGooy6BKPkHbHxP2Qm9QjeLr"} [:p [:<> "Then we group them by the relevant conditions"]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5dqpVcsGooy6BKPkHbHxP2Qm9QjeLr"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(group-by #(if (= 0 (mod % (:divisible-by (first input))))\n             (:on-true (first input))\n             (:on-false (first input)))\n          (map (partial inspect (first input) (fn [old] (/ old 3))) (:items (first input))))", :nextjournal/render-opts {:loc {:line 91, :end-line 94, :column 1, :end-column 93}, :id "solutions.2022.day11/anon-expr-5drWB3QfMQ9Xrkt7saSqvkedYf61wh-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 0 1], :nextjournal/value [{:path [1 0 1 0], :nextjournal/value 83, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 0 1 1], :nextjournal/value 125, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1], :nextjournal/value [{:path [1 1 1 0], :nextjournal/value 116, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 1], :nextjournal/value 148, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 2], :nextjournal/value 110, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1 1 3], :nextjournal/value 110, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]" "}"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-entry-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (comp (nextjournal.clerk.render/inspect-children opts) (interpose " ")) xs)), :page-size 2, :hash "5dsRuzZximgoCTqHkts5WgKf7zc8xg"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/map-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-map, :opening-paren "{", :page-size 10, :hash "5drc3ac5ux7kS4h2vozdxwsrKDqSmn"}, :nextjournal/render-opts {:id "solutions.2022.day11/anon-expr-5drWB3QfMQ9Xrkt7saSqvkedYf61wh-result-1"}}, :nextjournal/blob-id "5dt9U6iE3z8WN8LPStB36pNdPjW1f1"}, :nextjournal/render-opts {:id "solutions.2022.day11/anon-expr-5drWB3QfMQ9Xrkt7saSqvkedYf61wh-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5duHmZn4WFZhtGjKRHhDMYLr85venp"} ["h2" {:id "move-items-for-monkeys"} [:<> "Move items for monkeys"]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5duHmZn4WFZhtGjKRHhDMYLr85venp"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5dsYGE5Htws91S9aZemVx2nz6fHakX"} [:p [:<> "Lastly we reduce over the list of monkeys and update the items to reflect"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "changes, as well as update the inspection counts"]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5dsYGE5Htws91S9aZemVx2nz6fHakX"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn move-items [monkeys monkey-idx inspect-fn]\n  (let [monkey (nth monkeys monkey-idx)]\n    (if (empty? (:items monkey))\n      monkeys\n      (->> (map (partial inspect monkey inspect-fn) (:items monkey))\n           (group-by #(if (= 0 (mod % (:divisible-by monkey)))\n                        (:on-true monkey)\n                        (:on-false monkey)))\n           (reduce (fn [monkeys [idx items]]\n                     (let [next-monkey (nth monkeys idx)]\n                       (-> (assoc monkeys idx (assoc next-monkey :items ((comp vec flatten cons) (:items next-monkey) items)))\n                           (assoc monkey-idx (assoc monkey :items [] :inspected (+ (:inspected monkey) (count (:items monkey))))))))\n                   monkeys)))))", :nextjournal/render-opts {:loc {:line 100, :end-line 112, :column 1, :end-column 32}, :id "solutions.2022.day11/move-items-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5dsN7rQujEHub3Wjwa46VgrkGrdVrs"} ["h2" {:id "advance-a-round"} [:<> "Advance a round"]] [:p [:<> "Nearly there now, here we create a function to advance a single round."]] [:p [:<> "By that, I mean we go through each monkey and apply all the movement commands"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "of each monkey once using a reduce over the indexes."]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5dsN7rQujEHub3Wjwa46VgrkGrdVrs"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn advance-round [inspect-fn monkeys]\n  (reduce #(move-items %1 %2 inspect-fn)\n          monkeys\n          (range 0 (count monkeys))))", :nextjournal/render-opts {:loc {:line 119, :end-line 122, :column 1, :end-column 38}, :id "solutions.2022.day11/advance-round-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5duM5W458WkfbCamnX5EH3ifhDEHBS"} ["h2" {:id "advance-all-rounds"} [:<> "Advance all rounds"]] [:p [:<> "Next we advance rounds by creating an infinite sequence of all possible"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "rounds and returning the round we care about"]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5duM5W458WkfbCamnX5EH3ifhDEHBS"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn advance-rounds [n inspect-fn input]\n  (nth (iterate (partial advance-round inspect-fn) input) n))", :nextjournal/render-opts {:loc {:line 127, :end-line 128, :column 1, :end-column 62}, :id "solutions.2022.day11/advance-rounds-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5dqrfR8W6ymiT1DRYqYpRsQLE9FrvE"} ["h2" {:id "compute-the-score"} [:<> "Compute the score"]] [:p [:<> "Lastly since both parts are identical, we can use a general compute function"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "to handle both"]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5dqrfR8W6ymiT1DRYqYpRsQLE9FrvE"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn compute-score [n inspect-fn input]\n  (->> (advance-rounds n inspect-fn input)\n       (map :inspected)\n       sort\n       (take-last 2)\n       (apply *)))", :nextjournal/render-opts {:loc {:line 133, :end-line 138, :column 1, :end-column 19}, :id "solutions.2022.day11/compute-score-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5du6fkS1sTF47kurpXrDQMmT75euxw"} ["h2" {:id "part-1"} [:<> "Part 1"]] [:p [:<> "Now the parts!"]] [:p [:<> "Part 1 runs for 20 rounds and takes the "] [:code [:<> "/ 3"]] [:<> " function during the inspect"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "step"]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5du6fkS1sTF47kurpXrDQMmT75euxw"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-1\n  [input]\n  (compute-score 20 #(/ % 3) input))", :nextjournal/render-opts {:loc {:line 146, :end-line 148, :column 1, :end-column 37}, :id "solutions.2022.day11/part-1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 151312, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2022.day11/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}}, :nextjournal/blob-id "5dtgNoTMgSXFfou35hPeY75FkwaDGX"}, :nextjournal/render-opts {:id "solutions.2022.day11/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5drtk2aFcgGHc6uJP1kQypG3JF8SHZ"} ["h2" {:id "part-2"} [:<> "Part 2"]] [:p [:<> "Part 2 runs for "] [:em [:<> "10,000"]] [:<> " rounds and takes what looks like dark magic during"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "the inspect step."]] [:p [:<> "Due to the level of computation required to handle such infeasibly large"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "numbers (try this without the function and see how many steps you get), we"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "can't just compute the values as expected. We have to use some clever modular"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "arithmetic."]] [:p [:<> "In reality we don't need the full value, just the greatest common divisor of"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "all monkeys. This guarantees that divisibility is always correct due to"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:a {:href "https://en.wikipedia.org/wiki/Congruence_relation"} [:<> "congruence"]] [:<> ", meaning we"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "can specifically add and multiply without affecting the divisibility."]] [:p [:<> "Nifty stuff! Thanks maths. We can now safely perform as many rounds as we"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "want, but for the answer we only care about 10,000"]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5drtk2aFcgGHc6uJP1kQypG3JF8SHZ"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-2\n  [input]\n  (compute-score 10000 (fn [n] (mod n (reduce #(* (:divisible-by %2) %1) 1 input))) input))", :nextjournal/render-opts {:loc {:line 171, :end-line 173, :column 1, :end-column 92}, :id "solutions.2022.day11/part-2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day11/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP#2"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2022.day11/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP#2"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 51382025916, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2022.day11/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}}, :nextjournal/blob-id "5ds9dWvAWiufkm13A3Vnp12Wosy1KG"}, :nextjournal/render-opts {:id "solutions.2022.day11/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}