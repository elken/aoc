{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Problem", :emoji nil, :path "#problem", :items []} {:title "Solution", :emoji nil, :path "#solution", :items [{:title "Find the repeating characters", :emoji nil, :path "#find-the-repeating-characters", :items []} {:title "Part 1", :emoji nil, :path "#part-1", :items []} {:title "Part 2", :emoji nil, :path "#part-2", :items []}]}], :nextjournal/render-opts {:toc-visibility true, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility true, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns solutions.2022.day06), :file "src/solutions/2022/day06.clj", :scope solutions.2022.day06, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://github.com/elken/aoc/blob/45b0a02227976458aa49bd018085558acac90e63/src/solutions/2022/day06.clj"} "src/solutions/2022/day06.clj" [:<> "@" [:span.tabular-nums "45b0a02"]]]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Problem", :description "Our first whiplash moment of the year! Yesterday's problem was quite tricky, and this one is barely a few lines long..."}, :title "Problem", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day06/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"} ["h1" {:id "problem"} [:<> "Problem"]]], :nextjournal/render-opts {:id "solutions.2022.day06/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div {:dangerouslySetInnerHTML {:__html "<article class=\"day-desc\"><h2>--- Day 6: Tuning Trouble ---</h2><p>The preparations are finally complete; you and the Elves leave camp on foot and begin to make your way toward the <em class=\"star\">star</em> fruit grove.</p>\n<p>As you move through the dense undergrowth, one of the Elves gives you a handheld <em>device</em>. He says that it has many fancy features, but the most important one to set up right now is the <em>communication system</em>.</p>\n<p>However, because he's heard you have <a href=\"/2016/day/6\">significant</a> <a href=\"/2016/day/25\">experience</a> <a href=\"/2019/day/7\">dealing</a> <a href=\"/2019/day/9\">with</a> <a href=\"/2019/day/16\">signal-based</a> <a href=\"/2021/day/25\">systems</a>, he convinced the other Elves that it would be okay to give you their one malfunctioning device - surely you'll have no problem fixing it.</p>\n<p>As if inspired by comedic timing, the device emits a few <span title=\"The magic smoke, on the other hand, seems to be contained... FOR NOW!\">colorful sparks</span>.</p>\n<p>To be able to communicate with the Elves, the device needs to <em>lock on to their signal</em>. The signal is a series of seemingly-random characters that the device receives one at a time.</p>\n<p>To fix the communication system, you need to add a subroutine to the device that detects a <em>start-of-packet marker</em> in the datastream. In the protocol being used by the Elves, the start of a packet is indicated by a sequence of <em>four characters that are all different</em>.</p>\n<p>The device will send your subroutine a datastream buffer (your puzzle input); your subroutine needs to identify the first position where the four most recently received characters were all different. Specifically, it needs to report the number of characters from the beginning of the buffer to the end of the first such four-character marker.</p>\n<p>For example, suppose you receive the following datastream buffer:</p>\n<pre><code>mjqjpqmgbljsphdztnvjfqwrcgsmlb</code></pre>\n<p>After the first three characters (<code>mjq</code>) have been received, there haven't been enough characters received yet to find the marker. The first time a marker could occur is after the fourth character is received, making the most recent four characters <code>mjqj</code>. Because <code>j</code> is repeated, this isn't a marker.</p>\n<p>The first time a marker appears is after the <em>seventh</em> character arrives. Once it does, the last four characters received are <code>jpqm</code>, which are all different. In this case, your subroutine should report the value <code><em>7</em></code>, because the first start-of-packet marker is complete after 7 characters have been processed.</p>\n<p>Here are a few more examples:</p>\n<ul>\n<li><code>bvwbjplbgvbhsrlpgdmjqwftvncz</code>: first marker after character <code><em>5</em></code></li>\n<li><code>nppdvjthqldpwncqszvftbrmjlhg</code>: first marker after character <code><em>6</em></code></li>\n<li><code>nznrnfrfntjfmvfwmzdfjlvtqnbhcprsg</code>: first marker after character <code><em>10</em></code></li>\n<li><code>zcfzfwzzqfrljwzlrfnpqdbhtmscgvjw</code>: first marker after character <code><em>11</em></code></li>\n</ul>\n<p><em>How many characters need to be processed before the first start-of-packet marker is detected?</em></p>\n</article><article class=\"day-desc\"><h2 id=\"part2\">--- Part Two ---</h2><p>Your device's communication system is correctly detecting packets, but still isn't working. It looks like it also needs to look for <em>messages</em>.</p>\n<p>A <em>start-of-message marker</em> is just like a start-of-packet marker, except it consists of <em>14 distinct characters</em> rather than 4.</p>\n<p>Here are the first positions of start-of-message markers for all of the above examples:</p>\n<ul>\n<li><code>mjqjpqmgbljsphdztnvjfqwrcgsmlb</code>: first marker after character <code><em>19</em></code></li>\n<li><code>bvwbjplbgvbhsrlpgdmjqwftvncz</code>: first marker after character <code><em>23</em></code></li>\n<li><code>nppdvjthqldpwncqszvftbrmjlhg</code>: first marker after character <code><em>23</em></code></li>\n<li><code>nznrnfrfntjfmvfwmzdfjlvtqnbhcprsg</code>: first marker after character <code><em>29</em></code></li>\n<li><code>zcfzfwzzqfrljwzlrfnpqdbhtmscgvjw</code>: first marker after character <code><em>26</em></code></li>\n</ul>\n<p><em>How many characters need to be processed before the first start-of-message marker is detected?</em></p>\n</article>"}}], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "solutions.2022.day06/anon-expr-5ds1Hxkc1WvEFzU4iH2pyrWQ3RNvdK-result"}}, :nextjournal/blob-id "5dtkkj1DPAXhgnUDfyRkP6pJbZPhe4"}, :nextjournal/render-opts {:id "solutions.2022.day06/anon-expr-5ds1Hxkc1WvEFzU4iH2pyrWQ3RNvdK-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day06/markdown-5ds3x3DshxF6PXADHGSJG4i3jZU1f7"} ["h1" {:id "solution"} [:<> "Solution"]] [:p [:<> "Our first whiplash moment of the year! Yesterday's problem was quite tricky, and this one is barely a few lines long..."]] [:p [:<> "Not a "] [:em [:<> "whole"]] [:<> " lot to say about this one, we create a sliding partition of the"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "input string and check if there's a distinct run of characters there. I spent"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "a bunch of time trying to create a map that kept track of everything we'd"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "seen so far ... seems I should just go with my gut next time."]] [:p [:<> "Both parts are probably the most similar they've been, the only difference is the size of the character repetitions."]] [:p [:<> "First things first, let's load our input and parse it"]]], :nextjournal/render-opts {:id "solutions.2022.day06/markdown-5ds3x3DshxF6PXADHGSJG4i3jZU1f7"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def input (->> (slurp (io/resource \"inputs/2022/day06.txt\")) ;; Load the resource\n                (str/split-lines)                             ;; Split into lines\n                first))                                       ;; Only a single line this time", :nextjournal/render-opts {:loc {:line 25, :end-line 27, :column 1, :end-column 24}, :id "solutions.2022.day06/input-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value ["vldvlvvhwhttcsttpntnvvqpqpddmlddwhwcwnwmwfwppdrrhllcwwgwhwvhwhshchshtsstzstztgtl" {:nextjournal/value {:n 80, :path [1], :total 4095, :offset 80, :replace-path [1 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "solutions.2022.day06/input-result-1"}}, :nextjournal/blob-id "5dqpqbaX9X8dR6aDFyM5kGEWLFA4U2"}, :nextjournal/render-opts {:id "solutions.2022.day06/input-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day06/markdown-5drVZwxbwq1RbutyJwwJEuYyNebiF9"} ["h2" {:id "find-the-repeating-characters"} [:<> "Find the repeating characters"]] [:p [:<> "Next, let's create a function to handle everything really."]] [:p [:<> "Given an input string and a defined length, create a partition that looks like"]]], :nextjournal/render-opts {:id "solutions.2022.day06/markdown-5drVZwxbwq1RbutyJwwJEuYyNebiF9"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(partition 4 1 \"abcdefgh\")", :nextjournal/render-opts {:loc {:line 33, :end-line 33, :column 1, :end-column 27}, :id "solutions.2022.day06/anon-expr-5drhEAZf5ZZzG71A5KU9xYy8FMiNdV-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value \a, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 0 1], :nextjournal/value \b, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 0 2], :nextjournal/value \c, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 0 3], :nextjournal/value \d, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value \b, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 1 1], :nextjournal/value \c, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 1 2], :nextjournal/value \d, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 1 3], :nextjournal/value \e, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}} {:path [1 2], :nextjournal/value [{:path [1 2 0], :nextjournal/value \c, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 2 1], :nextjournal/value \d, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 2 2], :nextjournal/value \e, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 2 3], :nextjournal/value \f, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}} {:path [1 3], :nextjournal/value [{:path [1 3 0], :nextjournal/value \d, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 3 1], :nextjournal/value \e, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 3 2], :nextjournal/value \f, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 3 3], :nextjournal/value \g, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}} {:path [1 4], :nextjournal/value [{:path [1 4 0], :nextjournal/value \e, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 4 1], :nextjournal/value \f, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 4 2], :nextjournal/value \g, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [1 4 3], :nextjournal/value \h, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")" ")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}, :nextjournal/render-opts {:id "solutions.2022.day06/anon-expr-5drhEAZf5ZZzG71A5KU9xYy8FMiNdV-result-1"}}, :nextjournal/blob-id "5dr2LF7h5sNHBcA5BASwCjefkkA92b"}, :nextjournal/render-opts {:id "solutions.2022.day06/anon-expr-5drhEAZf5ZZzG71A5KU9xYy8FMiNdV-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day06/markdown-5dquSSpk8oZxpU6ycGrYPMG6XJaKs1"} [:p [:<> "As you can see, we have a sliding list of all the characters (a nice trick"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "borrowed from last year) and all we need to do is loop over that with the"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "index to find a run of non-repeating characters. When we find one, the actual"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "number is the length + the current index (since the index is how many groups"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "in we are, not how many chars in)."]]], :nextjournal/render-opts {:id "solutions.2022.day06/markdown-5dquSSpk8oZxpU6ycGrYPMG6XJaKs1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn get-header-index [input length]\n  (let [groups (partition length 1 input)]\n    (loop [index 0]\n      (if (= length (count (distinct (nth groups index))))\n        (+ index length)\n        (recur (inc index))))))", :nextjournal/render-opts {:loc {:line 40, :end-line 45, :column 1, :end-column 32}, :id "solutions.2022.day06/get-header-index-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "#object[solutions.2022.day06$get_header_index 0x24a10870 \"solutions.2022.day06$get_header_index@24a10870\"]", :nextjournal/viewer {:name nextjournal.clerk.viewer/read+inspect-viewer, :render-fn #viewer-fn (fn [x] (try [nextjournal.clerk.render/inspect (nextjournal.clerk.viewer/read-string-without-tag-table x)] (catch js/Error _e (nextjournal.clerk.render/render-unreadable-edn x)))), :hash "5dt2ru159tAMavCJULP69Zvz1i4Zfd"}, :nextjournal/render-opts {:id "solutions.2022.day06/get-header-index-result-1"}}, :nextjournal/blob-id nil}, :nextjournal/render-opts {:id "solutions.2022.day06/get-header-index-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day06/markdown-5dscGgKG4KvnS8Uc8hwqVmzDCDgZ9h"} ["h2" {:id "part-1"} [:<> "Part 1"]] [:p [:<> "Both parts differ only on length, so we can trivially define part 1"]]], :nextjournal/render-opts {:id "solutions.2022.day06/markdown-5dscGgKG4KvnS8Uc8hwqVmzDCDgZ9h"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-1\n  [input]\n  (get-header-index input 4))", :nextjournal/render-opts {:loc {:line 50, :end-line 52, :column 1, :end-column 30}, :id "solutions.2022.day06/part-1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day06/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2022.day06/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 1198, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2022.day06/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}}, :nextjournal/blob-id "5dsBikGuP53c9DyGCRkA66yPqhYypo"}, :nextjournal/render-opts {:id "solutions.2022.day06/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day06/markdown-5dt8iqxKpSFDHRpZ22wZ3uksLwwCcB"} ["h2" {:id "part-2"} [:<> "Part 2"]] [:p [:<> "And finally part 2"]]], :nextjournal/render-opts {:id "solutions.2022.day06/markdown-5dt8iqxKpSFDHRpZ22wZ3uksLwwCcB"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-2\n  [input]\n  (get-header-index input 14))", :nextjournal/render-opts {:loc {:line 61, :end-line 63, :column 1, :end-column 31}, :id "solutions.2022.day06/part-2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day06/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP#2"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2022.day06/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP#2"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 3120, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2022.day06/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}}, :nextjournal/blob-id "5drvd7RgnKA3ikVx8khj614TVp9Yrc"}, :nextjournal/render-opts {:id "solutions.2022.day06/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}