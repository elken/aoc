{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Problem", :emoji nil, :path "#problem", :items [{:title "Solution", :emoji nil, :path "#solution", :items []} {:title "Convert range to co-ordinates", :emoji nil, :path "#convert-range-to-co-ordinates", :items []} {:title "Compute trees", :emoji nil, :path "#compute-trees", :items []} {:title "Check visibility", :emoji nil, :path "#check-visibility", :items []} {:title "Compute viewing distance", :emoji nil, :path "#compute-viewing-distance", :items []} {:title "Part 1", :emoji nil, :path "#part-1", :items []} {:title "Part 2", :emoji nil, :path "#part-2", :items []}]}], :nextjournal/render-opts {:toc-visibility true, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility true, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns solutions.2022.day08), :file "src/solutions/2022/day08.clj", :scope solutions.2022.day08, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://github.com/elken/aoc/blob/274002b8ffb1291f378656ee0bcdd5008050081c/src/solutions/2022/day08.clj"} "src/solutions/2022/day08.clj" [:<> "@" [:span.tabular-nums "274002b"]]]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Problem", :description "Ho boy, this was a pain. I couldn't find a decent library to handle matrices/co-ordinates so writing most of this took paper."}, :title "Problem", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"} ["h1" {:id "problem"} [:<> "Problem"]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div {:dangerouslySetInnerHTML {:__html "<article class=\"day-desc\"><h2>--- Day 8: Treetop Tree House ---</h2><p>The expedition comes across a peculiar patch of tall trees all planted carefully in a grid. The Elves explain that a previous expedition planted these trees as a reforestation effort. Now, they're curious if this would be a good location for a <a href=\"https://en.wikipedia.org/wiki/Tree_house\" target=\"_blank\">tree house</a>.</p>\n<p>First, determine whether there is enough tree cover here to keep a tree house <em>hidden</em>. To do this, you need to count the number of trees that are <em>visible from outside the grid</em> when looking directly along a row or column.</p>\n<p>The Elves have already launched a <a href=\"https://en.wikipedia.org/wiki/Quadcopter\" target=\"_blank\">quadcopter</a> to generate a map with the height of each tree (<span title=\"The Elves have already launched a quadcopter (your puzzle input).\">your puzzle input</span>). For example:</p>\n<pre><code>30373\n25512\n65332\n33549\n35390\n</code></pre>\n<p>Each tree is represented as a single digit whose value is its height, where <code>0</code> is the shortest and <code>9</code> is the tallest.</p>\n<p>A tree is <em>visible</em> if all of the other trees between it and an edge of the grid are <em>shorter</em> than it. Only consider trees in the same row or column; that is, only look up, down, left, or right from any given tree.</p>\n<p>All of the trees around the edge of the grid are <em>visible</em> - since they are already on the edge, there are no trees to block the view. In this example, that only leaves the <em>interior nine trees</em> to consider:</p>\n<ul>\n<li>The top-left <code>5</code> is <em>visible</em> from the left and top. (It isn't visible from the right or bottom since other trees of height <code>5</code> are in the way.)</li>\n<li>The top-middle <code>5</code> is <em>visible</em> from the top and right.</li>\n<li>The top-right <code>1</code> is not visible from any direction; for it to be visible, there would need to only be trees of height <em>0</em> between it and an edge.</li>\n<li>The left-middle <code>5</code> is <em>visible</em>, but only from the right.</li>\n<li>The center <code>3</code> is not visible from any direction; for it to be visible, there would need to be only trees of at most height <code>2</code> between it and an edge.</li>\n<li>The right-middle <code>3</code> is <em>visible</em> from the right.</li>\n<li>In the bottom row, the middle <code>5</code> is <em>visible</em>, but the <code>3</code> and <code>4</code> are not.</li>\n</ul>\n<p>With 16 trees visible on the edge and another 5 visible in the interior, a total of <code><em>21</em></code> trees are visible in this arrangement.</p>\n<p>Consider your map; <em>how many trees are visible from outside the grid?</em></p>\n</article><article class=\"day-desc\"><h2 id=\"part2\">--- Part Two ---</h2><p>Content with the amount of tree cover available, the Elves just need to know the best spot to build their tree house: they would like to be able to see a lot of <em>trees</em>.</p>\n<p>To measure the viewing distance from a given tree, look up, down, left, and right from that tree; stop if you reach an edge or at the first tree that is the same height or taller than the tree under consideration. (If a tree is right on the edge, at least one of its viewing distances will be zero.)</p>\n<p>The Elves don't care about distant trees taller than those found by the rules above; the proposed tree house has large <a href=\"https://en.wikipedia.org/wiki/Eaves\" target=\"_blank\">eaves</a> to keep it dry, so they wouldn't be able to see higher than the tree house anyway.</p>\n<p>In the example above, consider the middle <code>5</code> in the second row:</p>\n<pre><code>30373\n25<em>5</em>12\n65332\n33549\n35390\n</code></pre>\n<ul>\n<li>Looking up, its view is not blocked; it can see <code><em>1</em></code> tree (of height <code>3</code>).</li>\n<li>Looking left, its view is blocked immediately; it can see only <code><em>1</em></code> tree (of height <code>5</code>, right next to it).</li>\n<li>Looking right, its view is not blocked; it can see <code><em>2</em></code> trees.</li>\n<li>Looking down, its view is blocked eventually; it can see <code><em>2</em></code> trees (one of height <code>3</code>, then the tree of height <code>5</code> that blocks its view).</li>\n</ul>\n<p>A tree's <em>scenic score</em> is found by <em>multiplying together</em> its viewing distance in each of the four directions. For this tree, this is <code><em>4</em></code> (found by multiplying <code>1 * 1 * 2 * 2</code>).</p>\n<p>However, you can do even better: consider the tree of height <code>5</code> in the middle of the fourth row:</p>\n<pre><code>30373\n25512\n65332\n33<em>5</em>49\n35390\n</code></pre>\n<ul>\n<li>Looking up, its view is blocked at <code><em>2</em></code> trees (by another tree with a height of <code>5</code>).</li>\n<li>Looking left, its view is not blocked; it can see <code><em>2</em></code> trees.</li>\n<li>Looking down, its view is also not blocked; it can see <code><em>1</em></code> tree.</li>\n<li>Looking right, its view is blocked at <code><em>2</em></code> trees (by a massive tree of height <code>9</code>).</li>\n</ul>\n<p>This tree's scenic score is <code><em>8</em></code> (<code>2 * 2 * 1 * 2</code>); this is the ideal spot for the tree house.</p>\n<p>Consider each tree on your map. <em>What is the highest scenic score possible for any tree?</em></p>\n</article>"}}], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "solutions.2022.day08/anon-expr-5dsfzTc8DFev3wJhp1RHxwvqfxk13k-result"}}, :nextjournal/blob-id "5dtdbjYKiQCtfzxKrcgGzsy4fnGRjC"}, :nextjournal/render-opts {:id "solutions.2022.day08/anon-expr-5dsfzTc8DFev3wJhp1RHxwvqfxk13k-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5dtMsDdnxL4HqZEAwPvQKSQ9GGzvsH"} ["h2" {:id "solution"} [:<> "Solution"]] [:p [:<> "Ho boy, this was a "] [:em [:<> "pain"]] [:<> ". I couldn't find a decent library to handle"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "matrices/co-ordinates so writing most of this took "] [:strong [:em [:<> "paper"]]] [:<> "."]] [:p [:<> "It's a standard \"maximum neighbour\" type problem, but this stuff always goes"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "over my head. To simplify, we have to count the number of trees visible in at"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "least one direction (visibility here being whether or not a tree has the"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "largest height to a given edge)."]] ["h2" {:id "convert-range-to-co-ordinates"} [:<> "Convert range to co-ordinates"]] [:p [:<> "First things first, let's load our input and parse it"]] [:p [:<> "We have to use a function to create the map format we need to solve this"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "problem, which lets us treat the matrix as a simple map without worrying"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "about columns or rows."]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5dtMsDdnxL4HqZEAwPvQKSQ9GGzvsH"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn range->coords\n  [matrix]\n  (into {}\n        (for [x (range (count matrix))\n              y (range (count (first matrix)))]\n          [[x y] (parse-long (str (get (get matrix x) y)))])))", :nextjournal/render-opts {:loc {:line 30, :end-line 35, :column 1, :end-column 63}, :id "solutions.2022.day08/range->coords-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5dtkWWC29mt9RocAAah8Loh78AAKb4"} [:p [:<> "Where a call like"]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5dtkWWC29mt9RocAAah8Loh78AAKb4"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(range->coords [\"123\" \"456\"])", :nextjournal/render-opts {:loc {:line 40, :end-line 40, :column 1, :end-column 30}, :id "solutions.2022.day08/anon-expr-5dsVtdisJwEDKfVmxVj8TvNNkfUShU-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5druQQm6QyiqA1KfA9MLcYznPcvBKq"} [:p [:<> "Looks like"]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5druQQm6QyiqA1KfA9MLcYznPcvBKq"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [{:path [0 0], :nextjournal/value [{:path [0 0 0], :nextjournal/value [{:path [0 0 0 0], :nextjournal/value [{:path [0 0 0 0 0], :nextjournal/value 0, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}} {:path [0 0 0 0 1], :nextjournal/value 0, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}} {:path [0 0 0 1], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-row, :hash "5drXEtE7GU2i9VCUHQoSvojFaMGYVX"}} {:path [0 0 1], :nextjournal/value [{:path [0 0 1 0], :nextjournal/value [{:path [0 0 1 0 0], :nextjournal/value 0, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}} {:path [0 0 1 0 1], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}} {:path [0 0 1 1], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-row, :hash "5drXEtE7GU2i9VCUHQoSvojFaMGYVX"}} {:path [0 0 2], :nextjournal/value [{:path [0 0 2 0], :nextjournal/value [{:path [0 0 2 0 0], :nextjournal/value 0, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}} {:path [0 0 2 0 1], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}} {:path [0 0 2 1], :nextjournal/value 3, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-row, :hash "5drXEtE7GU2i9VCUHQoSvojFaMGYVX"}} {:path [0 0 3], :nextjournal/value [{:path [0 0 3 0], :nextjournal/value [{:path [0 0 3 0 0], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}} {:path [0 0 3 0 1], :nextjournal/value 0, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}} {:path [0 0 3 1], :nextjournal/value 4, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-row, :hash "5drXEtE7GU2i9VCUHQoSvojFaMGYVX"}} {:path [0 0 4], :nextjournal/value [{:path [0 0 4 0], :nextjournal/value [{:path [0 0 4 0 0], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}} {:path [0 0 4 0 1], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}} {:path [0 0 4 1], :nextjournal/value 5, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-row, :hash "5drXEtE7GU2i9VCUHQoSvojFaMGYVX"}} {:path [0 0 5], :nextjournal/value [{:path [0 0 5 0], :nextjournal/value [{:path [0 0 5 0 0], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}} {:path [0 0 5 0 1], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}} {:path [0 0 5 1], :nextjournal/value 6, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-number, :hash "5drKG2QY8FdneyY398Yra3C36WTTE7"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-row-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-row, :hash "5drXEtE7GU2i9VCUHQoSvojFaMGYVX"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/table-body-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-body, :hash "5drQGFYRwE7LYkwfBJZPDGzstcupEc"}}], :nextjournal/width :wide, :nextjournal/render-opts {:num-cols 2, :number-col? #{1}, :id "solutions.2022.day08/anon-expr-5dtnE6RgrYPXnGjMHWHXqMSczSpjaq-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/table-markup-viewer, :render-fn #viewer-fn nextjournal.clerk.render.table/render-table-markup, :hash "5dt19ccJPC8q3wuzv8JRnhqGzjDKRB"}}, :nextjournal/blob-id "5dtqGKDr2YLpCUkU3Xoom6FvhDSMTw"}, :nextjournal/width :wide, :nextjournal/render-opts {:num-cols 2, :number-col? #{1}, :id "solutions.2022.day08/anon-expr-5dtnE6RgrYPXnGjMHWHXqMSczSpjaq-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5dsS4JUAiHGXrFu8FnSegBSQht3R3T"} [:p [:<> "Ok, now we can load our input"]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5dsS4JUAiHGXrFu8FnSegBSQht3R3T"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def input (->> (slurp (io/resource \"inputs/2022/day08.txt\")) ;; Load the resource\n                str/split-lines                               ;; Split into lines\n                range->coords))                               ;; Parse to a map of '(1 2 3) => {[0 0] 1 [0 1] 2 [0 2] 3}", :nextjournal/render-opts {:loc {:line 47, :end-line 49, :column 1, :end-column 32}, :id "solutions.2022.day08/input-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5dtcyf9doCnGuQUxpgqtPd4cCfn4aw"} [:p [:<> "Now let's solve it! First we create a convenience vector of all the"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "\"neighbour\" vectors."]] [:p [:<> "We made a guess that part 2 wouldn't involve diagonals, and we called it!"]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5dtcyf9doCnGuQUxpgqtPd4cCfn4aw"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def directions [[-1 0] [1 0] [0 -1] [0 1]])", :nextjournal/render-opts {:loc {:line 55, :end-line 55, :column 1, :end-column 45}, :id "solutions.2022.day08/directions-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5drC2yoVC5QymdG9THNMuokr1dPmK9"} ["h2" {:id "compute-trees"} [:<> "Compute trees"]] [:p [:<> "Then we compute all the trees from a given tree to the edge in a given direction."]] [:p [:<> "Given the coordinate list, a tree to compute from and a direction vector;"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "iterate until we hit an edge."]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5drC2yoVC5QymdG9THNMuokr1dPmK9"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn trees-in [coords tree direction]\n  (let [[_ & trees] (map coords (iterate (partial mapv + direction) tree))]\n    (take-while some? trees)))", :nextjournal/render-opts {:loc {:line 62, :end-line 64, :column 1, :end-column 31}, :id "solutions.2022.day08/trees-in-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5dtbWc6uc9kZ1EXdPJzwHAtAQRuHt7"} ["h2" {:id "check-visibility"} [:<> "Check visibility"]] [:p [:<> "Compute in all directions if a tree can see an edge in a given direction."]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5dtbWc6uc9kZ1EXdPJzwHAtAQRuHt7"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn visible?\n  [coords tree]\n  (some #(every? (partial > (coords tree)) (trees-in coords tree %)) directions))", :nextjournal/render-opts {:loc {:line 68, :end-line 70, :column 1, :end-column 82}, :id "solutions.2022.day08/visible?-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5duK5JpbVEPLqTCEwbsLVx48MV4Nvj"} ["h2" {:id "compute-viewing-distance"} [:<> "Compute viewing distance"]] [:p [:<> "Compute the viewing distance; that is how many trees the current tree can see."]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5duK5JpbVEPLqTCEwbsLVx48MV4Nvj"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn viewing-distance\n  [coords tree]\n  (transduce\n   (map (fn [direction]\n          (reduce (fn [distance cand] (if (>= cand (coords tree)) (reduced (inc distance)) (inc distance)))\n                  0\n                  (trees-in coords tree direction))))\n   *\n   directions))", :nextjournal/render-opts {:loc {:line 74, :end-line 82, :column 1, :end-column 16}, :id "solutions.2022.day08/viewing-distance-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5dr5NDfP4m1mMu4cHApTCtwM2hcfHT"} ["h2" {:id "part-1"} [:<> "Part 1"]] [:p [:<> "That's everything! Now we can run through part 1. Here, all we care about is"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "how many trees can see an edge. A simple count of all the trees that have a"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "visible edge."]] [:p [:<> "There's almost certainly a cleaner transducer way to do this, maybe I'll"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "revisit after the fact."]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5dr5NDfP4m1mMu4cHApTCtwM2hcfHT"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-1\n  [input]\n  (count (filter (partial visible? input) (keys input))))", :nextjournal/render-opts {:loc {:line 92, :end-line 94, :column 1, :end-column 58}, :id "solutions.2022.day08/part-1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5dtvYRc5DtC3RPzuvhsx5HbbXH1rS7"} [:p [:<> "Running this part gives our answer"]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5dtvYRc5DtC3RPzuvhsx5HbbXH1rS7"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 1684, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2022.day08/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}}, :nextjournal/blob-id "5ds7LsKiFB5ZKb2Yncz8qhhpNdrNEQ"}, :nextjournal/render-opts {:id "solutions.2022.day08/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5dsGaoKQMqwtbEXagWKxzK3adwKMZN"} ["h2" {:id "part-2"} [:<> "Part 2"]] [:p [:<> "Part 2 is a bit more involved, now we have to find the most scenic tree by"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "multiplying together all the viewing distances and finding the biggest"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "number."]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5dsGaoKQMqwtbEXagWKxzK3adwKMZN"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-2\n  [input]\n  (transduce (map (partial viewing-distance input)) max 0 (keys input)))", :nextjournal/render-opts {:loc {:line 105, :end-line 107, :column 1, :end-column 73}, :id "solutions.2022.day08/part-2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2022.day08/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2022.day08/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 486540, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2022.day08/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}}, :nextjournal/blob-id "5dsb2zLW16Ao8tzR2CnNqdL94DwFt8"}, :nextjournal/render-opts {:id "solutions.2022.day08/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}