{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Problem", :emoji nil, :path "#problem", :items []} {:title "Solution", :emoji nil, :path "#solution", :items [{:title "Functions", :emoji nil, :path "#functions", :items [{:title "valid-substring?", :emoji nil, :path "#valid-substring?", :items []} {:title "valid-design?", :emoji nil, :path "#valid-design?", :items []} {:title "count-combinations", :emoji nil, :path "#count-combinations", :items []}]} {:title "Part 1", :emoji nil, :path "#part-1", :items []} {:title "Part 2", :emoji nil, :path "#part-2", :items []}]}], :nextjournal/render-opts {:toc-visibility true, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility true, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns solutions.2024.day19), :file "src/solutions/2024/day19.clj", :scope solutions.2024.day19, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://github.com/elken/aoc/blob/45b0a02227976458aa49bd018085558acac90e63/src/solutions/2024/day19.clj"} "src/solutions/2024/day19.clj" [:<> "@" [:span.tabular-nums "45b0a02"]]]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Problem", :description "It's non-grid day!"}, :title "Problem", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day19/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"} ["h1" {:id "problem"} [:<> "Problem"]]], :nextjournal/render-opts {:id "solutions.2024.day19/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div {:dangerouslySetInnerHTML {:__html "<article class=\"day-desc\"><h2>--- Day 19: Linen Layout ---</h2><p>Today, The Historians take you up to the <a href=\"/2023/day/12\">hot springs</a> on Gear Island! Very <a href=\"https://www.youtube.com/watch?v=ekL881PJMjI\" target=\"_blank\">suspiciously</a>, absolutely nothing goes wrong as they begin their careful search of the vast field of helixes.</p>\n<p>Could this <em>finally</em> be your chance to visit the <a href=\"https://en.wikipedia.org/wiki/Onsen\" target=\"_blank\">onsen</a> next door? Only one way to find out.</p>\n<p>After a brief conversation with the reception staff at the onsen front desk, you discover that you don't have the right kind of money to pay the admission fee. However, before you can leave, the staff get your attention. Apparently, they've heard about how you helped at the hot springs, and they're willing to make a deal: if you can simply help them <em>arrange their towels</em>, they'll let you in for <em>free</em>!</p>\n<p>Every towel at this onsen is marked with a <em>pattern of colored stripes</em>. There are only a few patterns, but for any particular pattern, the staff can get you as many towels with that pattern as you need. Each <span title=\"It really seems like they've gathered a lot of magic into the towel colors.\">stripe</span> can be <em>white</em> (<code>w</code>), <em>blue</em> (<code>u</code>), <em>black</em> (<code>b</code>), <em>red</em> (<code>r</code>), or <em>green</em> (<code>g</code>). So, a towel with the pattern <code>ggr</code> would have a green stripe, a green stripe, and then a red stripe, in that order. (You can't reverse a pattern by flipping a towel upside-down, as that would cause the onsen logo to face the wrong way.)</p>\n<p>The Official Onsen Branding Expert has produced a list of <em>designs</em> - each a long sequence of stripe colors - that they would like to be able to display. You can use any towels you want, but all of the towels' stripes must exactly match the desired design. So, to display the design <code>rgrgr</code>, you could use two <code>rg</code> towels and then an <code>r</code> towel, an <code>rgr</code> towel and then a <code>gr</code> towel, or even a single massive <code>rgrgr</code> towel (assuming such towel patterns were actually available).</p>\n<p>To start, collect together all of the available towel patterns and the list of desired designs (your puzzle input). For example:</p>\n<pre><code>r, wr, b, g, bwu, rb, gb, br\n\nbrwrr\nbggr\ngbbr\nrrbgbr\nubwu\nbwurrg\nbrgr\nbbrgwb\n</code></pre>\n<p>The first line indicates the available towel patterns; in this example, the onsen has unlimited towels with a single red stripe (<code>r</code>), unlimited towels with a white stripe and then a red stripe (<code>wr</code>), and so on.</p>\n<p>After the blank line, the remaining lines each describe a design the onsen would like to be able to display. In this example, the first design (<code>brwrr</code>) indicates that the onsen would like to be able to display a black stripe, a red stripe, a white stripe, and then two red stripes, in that order.</p>\n<p>Not all designs will be possible with the available towels. In the above example, the designs are possible or impossible as follows:</p>\n<ul>\n<li><code>brwrr</code> can be made with a <code>br</code> towel, then a <code>wr</code> towel, and then finally an <code>r</code> towel.</li>\n<li><code>bggr</code> can be made with a <code>b</code> towel, two <code>g</code> towels, and then an <code>r</code> towel.</li>\n<li><code>gbbr</code> can be made with a <code>gb</code> towel and then a <code>br</code> towel.</li>\n<li><code>rrbgbr</code> can be made with <code>r</code>, <code>rb</code>, <code>g</code>, and <code>br</code>.</li>\n<li><code>ubwu</code> is <em>impossible</em>.</li>\n<li><code>bwurrg</code> can be made with <code>bwu</code>, <code>r</code>, <code>r</code>, and <code>g</code>.</li>\n<li><code>brgr</code> can be made with <code>br</code>, <code>g</code>, and <code>r</code>.</li>\n<li><code>bbrgwb</code> is <em>impossible</em>.</li>\n</ul>\n<p>In this example, <code><em>6</em></code> of the eight designs are possible with the available towel patterns.</p>\n<p>To get into the onsen as soon as possible, consult your list of towel patterns and desired designs carefully. <em>How many designs are possible?</em></p>\n</article><article class=\"day-desc\"><h2 id=\"part2\">--- Part Two ---</h2><p>The staff don't really like some of the towel arrangements you came up with. To avoid an endless cycle of towel rearrangement, maybe you should just give them every possible option.</p>\n<p>Here are all of the different ways the above example's designs can be made:</p>\n<p><code>brwrr</code> can be made in two different ways: <code>b</code>, <code>r</code>, <code>wr</code>, <code>r</code> <em>or</em> <code>br</code>, <code>wr</code>, <code>r</code>.</p>\n<p><code>bggr</code> can only be made with <code>b</code>, <code>g</code>, <code>g</code>, and <code>r</code>.</p>\n<p><code>gbbr</code> can be made 4 different ways:</p>\n<ul>\n<li><code>g</code>, <code>b</code>, <code>b</code>, <code>r</code></li>\n<li><code>g</code>, <code>b</code>, <code>br</code></li>\n<li><code>gb</code>, <code>b</code>, <code>r</code></li>\n<li><code>gb</code>, <code>br</code></li>\n</ul>\n<p><code>rrbgbr</code> can be made 6 different ways:</p>\n<ul>\n<li><code>r</code>, <code>r</code>, <code>b</code>, <code>g</code>, <code>b</code>, <code>r</code></li>\n<li><code>r</code>, <code>r</code>, <code>b</code>, <code>g</code>, <code>br</code></li>\n<li><code>r</code>, <code>r</code>, <code>b</code>, <code>gb</code>, <code>r</code></li>\n<li><code>r</code>, <code>rb</code>, <code>g</code>, <code>b</code>, <code>r</code></li>\n<li><code>r</code>, <code>rb</code>, <code>g</code>, <code>br</code></li>\n<li><code>r</code>, <code>rb</code>, <code>gb</code>, <code>r</code></li>\n</ul>\n<p><code>bwurrg</code> can only be made with <code>bwu</code>, <code>r</code>, <code>r</code>, and <code>g</code>.</p>\n<p><code>brgr</code> can be made in two different ways: <code>b</code>, <code>r</code>, <code>g</code>, <code>r</code> <em>or</em> <code>br</code>, <code>g</code>, <code>r</code>.</p>\n<p><code>ubwu</code> and <code>bbrgwb</code> are still impossible.</p>\n<p>Adding up all of the ways the towels in this example could be arranged into the desired designs yields <code><em>16</em></code> (<code>2 + 1 + 4 + 6 + 1 + 2</code>).</p>\n<p>They'll let you into the onsen as soon as you have the list. <em>What do you get if you add up the number of different ways you could make each design?</em></p>\n</article>"}}], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "solutions.2024.day19/anon-expr-5drpNYb6gvxT8LdDkbHLrsuvyQF8Bq-result"}}, :nextjournal/blob-id "5du6fCkbkozzcx5HNrqmf1AH8fdZFm"}, :nextjournal/render-opts {:id "solutions.2024.day19/anon-expr-5drpNYb6gvxT8LdDkbHLrsuvyQF8Bq-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day19/markdown-5dtysZuFHKSjhse5cwR2cMtBrNFKtV"} ["h1" {:id "solution"} [:<> "Solution"]] [:p [:<> "It's non-grid day!"]] [:p [:<> "Today is a really good one, we're tasked with finding all the valid"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "arrangements of one list that come from another list. We have a"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "list of valid arrangements and we have to check if we can construct"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "the items from the second list."]] [:p [:<> "Part 1 has us solving like that, and part 2 wants us to sum up all"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "the valid combinations we can do. Another day where I accidentally"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "solved part 2 before part 1..."]] [:p [:<> "First things first, let's load our input and parse it"]]], :nextjournal/render-opts {:id "solutions.2024.day19/markdown-5dtysZuFHKSjhse5cwR2cMtBrNFKtV"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn parse-input [input]\n  (let [[available designs] (str/split input #\"\\n\\n\")]\n    [(set (re-seq #\"\\w+\" available)) (str/split-lines designs)]))", :nextjournal/render-opts {:loc {:line 30, :end-line 32, :column 1, :end-column 66}, :id "solutions.2024.day19/parse-input-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day19/markdown-5drFnW4WFRYAiSs7YsgYX3kSADo8Wa"} [:p [:<> "And apply it to our input"]]], :nextjournal/render-opts {:id "solutions.2024.day19/markdown-5drFnW4WFRYAiSs7YsgYX3kSADo8Wa"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def input (->> (slurp (io/resource \"inputs/2024/day19.txt\")) ;; Load the resource\n                parse-input))                                 ;; Parse the input", :nextjournal/render-opts {:loc {:line 36, :end-line 37, :column 1, :end-column 30}, :id "solutions.2024.day19/input-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value [{:path [1 0 0], :nextjournal/value "b", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 1], :nextjournal/value "bb", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 2], :nextjournal/value "bbb", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 3], :nextjournal/value "bbbubgrg", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 4], :nextjournal/value "bbbuub", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 5], :nextjournal/value "bbbwugg", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 6], :nextjournal/value "bbg", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 7], :nextjournal/value "bbgu", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 8], :nextjournal/value "bbr", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 9], :nextjournal/value "bbrgbwgr", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 10], :nextjournal/value "bbu", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 11], :nextjournal/value "bburur", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 12], :nextjournal/value "bbw", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 13], :nextjournal/value "bbwg", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 14], :nextjournal/value "bbwrr", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 15], :nextjournal/value "bg", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 16], :nextjournal/value "bgb", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 17], :nextjournal/value "bgbb", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 18], :nextjournal/value "bgbr", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 0 19], :nextjournal/value "bgbubrg", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:nextjournal/value {:n 20, :path [1 0], :total 447, :offset 20}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/set-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "#{", :closing-paren ("}"), :page-size 20, :hash "5drg8hfjVALoJFYnysrUYCoTb1MquJ"}} {:path [1 1], :nextjournal/value [{:path [1 1 0], :nextjournal/value "wbugbugbgrgwubgrrgrubgbwubugrbrrubgwggggubrrrwrbr", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 1], :nextjournal/value "wbgrbrgbwrrurrrguwbubburbrwgwrbuwrbwgwuwubwurggbrggbr", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 2], :nextjournal/value "urbrbuwgbgwwwbgbwrugruburguwgwbgrugwrrbwbubgrwgww", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 3], :nextjournal/value "rrbgwgrwbrbuubbuugrurgbrbrwrbrggurwgwrbuwuwgubuwwrru", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 4], :nextjournal/value "uburbwruugurrbwbgbggrgrrurrugwuwggggubuwugbgurgugurbbbu", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 5], :nextjournal/value "wbubwwubrurggrrbbbuuwuwgggbguubwuubbwggrgubwbuggrbrrubg", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 6], :nextjournal/value "bbwbgggrwrrbwurubbrgugrguwrwwrrguurwwburgruwrrbrrbwgbggw", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 7], :nextjournal/value "gugrgwgbbwguuwbbrgwrruuuruwgbrurwubggbubbgrugubgbuwwgww", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 8], :nextjournal/value "bbrbbwgwwwbrgbrrgwgugwbwwrrbbwwgrwrrrrwwgrbguububgwrgww", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 9], :nextjournal/value "ubuuuwrrwgwwgbguuurrgwrbbuggruurbwuwrubuugrwuuuwbwgubbuwgww", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 10], :nextjournal/value "uwuuwwwrrruggbbggrgwbbggwgurruwwgrugwrgww", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 11], :nextjournal/value "ubbbrbbgubugugggugrbwuwbgbbruguburwugrubug", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 12], :nextjournal/value "rwwruggrwguwguwgguruubrggbgbbubwwrbbgbwbwwbbubbruwb", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 13], :nextjournal/value "brubrbrurrbugwgrgrruuurrbgguwuwubbggbwgurbbuwugur", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 14], :nextjournal/value "wwrguwbwuggubgbrgbguburugbbwugrwwwggwwgbrgwrugrwuubgwwrggw", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 15], :nextjournal/value "uuugwubwgwrbuurbrwuuuubwgbubwbwrgbgrrbbggrwbwbg", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 16], :nextjournal/value "brgbbrugbwbbwbuugubwrbuggruubrgwwuggugbubbgub", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 17], :nextjournal/value "urbrwguurgbbrgbwrugggwwgwubbguwrurbwburrwgu", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 18], :nextjournal/value "uwrbgggguruwubgrruwrguuuubwugwwrgbgubwrwguubuubwugwbw", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1 19], :nextjournal/value "guugwbgwbrgurbrbwwrrubbbuurruuubburgrruwguwwwww", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:nextjournal/value {:n 20, :path [1 1], :total 400, :offset 20}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]" "]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "solutions.2024.day19/input-result-1"}}, :nextjournal/blob-id "5duLLK1L4XcuRxG595bc8GKb73zBSm"}, :nextjournal/render-opts {:id "solutions.2024.day19/input-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day19/markdown-5dsi2xgV3PrmkhyCKiQKjugqHeEYdy"} ["h2" {:id "functions"} [:<> "Functions"]] ["h3" {:id "valid-substring?"} [:<> "valid-substring?"]] [:p [:<> "A helper function we use in both parts, given a substring, a"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "position to apply the substring at and a string to apply to; check"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "if we can \"fit\" the substring in by ensuring it fits within the"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "bounds and matches the substring at "] [:code [:<> "pos"]] [:<> "."]]], :nextjournal/render-opts {:id "solutions.2024.day19/markdown-5dsi2xgV3PrmkhyCKiQKjugqHeEYdy"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn valid-substring? [sub pos s]\n  (let [end (+ pos (count sub))]\n    (and (<= end (count s))\n         (= sub (subs s pos end)))))", :nextjournal/render-opts {:loc {:line 47, :end-line 50, :column 1, :end-column 37}, :id "solutions.2024.day19/valid-substring?-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day19/markdown-5dsNMubdB2itn7eEgc4b67KceNuXAz"} ["h3" {:id "valid-design?"} [:<> "valid-design?"]] [:p [:<> "We start by creating a list of false the length of the design,"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "except at position 0 because the empty string is always blank. This"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "list represents all the valid starting positions from which we can"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "reach a valid end."]] [:p [:<> "So for each of these positions, we check if the current position is"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:code [:<> "true"]] [:<> ". Since 0 starts off as true, for the first iteration we run"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "the "] [:code [:<> "reduce"]] [:<> ". For each available configuration, work out where it"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "would end and check if the configuration fits within the bounds of"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "the string and that it matches the substring. If it matches, we"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "mark the last position of where the configuration would go as"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:code [:<> "true"]] [:<> ", otherwise just carry on."]] [:p [:<> "This gives us a list of all the valid positions that can make a"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "valid design, so we check the last position to ensure that we can"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "reach the end."]]], :nextjournal/render-opts {:id "solutions.2024.day19/markdown-5dsNMubdB2itn7eEgc4b67KceNuXAz"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn valid-design? [available design]\n  (let [length (count design)]\n    (-> (reduce\n         (fn [reachable pos]\n           (if (reachable pos)\n             (reduce\n              (fn [reachable word]\n                (if (valid-substring? word pos design)\n                  (assoc reachable (+ pos (count word)) true)\n                  reachable))\n              reachable\n              available)\n             reachable))\n         (assoc (vec (repeat (inc length) false)) 0 true)\n         (range length))\n        (last))))", :nextjournal/render-opts {:loc {:line 70, :end-line 85, :column 1, :end-column 18}, :id "solutions.2024.day19/valid-design?-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day19/markdown-5dtKsSXCqMA6z5mHaE2cnGQ2qqvKBn"} ["h3" {:id "count-combinations"} [:<> "count-combinations"]] [:p [:<> "Using a similar approach to part 1, we work backwards from the end"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "of the string to find how many valid ways we can split each suffix"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "into available configurations."]] [:p [:<> "The first position is 0, which only has 1 way to make it (\"\") and"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "we create a range from the end of the string to the start."]] [:p [:<> "For each "] [:code [:<> "pos"]] [:<> ", we check each word fits within the bounds of the"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "string and matches the substring. If it does, we get all the valid"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "ways after the substring and sum them up ot get the total"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "combinations from the current position."]] [:p [:<> "Since we work backwards, we have to get the first value (which"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "would be all the valid combinations from that position)."]]], :nextjournal/render-opts {:id "solutions.2024.day19/markdown-5dtKsSXCqMA6z5mHaE2cnGQ2qqvKBn"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn count-combinations\n  [available design]\n  (let [len (count design)]\n    (->\n     (reduce\n      (fn [counts pos]\n        (let [sum (->> available\n                       (keep #(when (valid-substring? % pos design)\n                                (get counts (+ pos (count %)))))\n                       (reduce + 0))]\n          (assoc counts pos sum)))\n      {len 1}\n      (range (dec len) -1 -1))\n     vals first)))", :nextjournal/render-opts {:loc {:line 103, :end-line 116, :column 1, :end-column 19}, :id "solutions.2024.day19/count-combinations-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day19/markdown-5dqx3wG7MPrkHUCKNkNJYkoGQhPA8Z"} ["h2" {:id "part-1"} [:<> "Part 1"]] [:p [:<> "Part 1 just parallel maps over all the valid designs and counts all"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "the "] [:code [:<> "true"]] [:<> "s."]]], :nextjournal/render-opts {:id "solutions.2024.day19/markdown-5dqx3wG7MPrkHUCKNkNJYkoGQhPA8Z"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-1\n  [[available designs]]\n  (->> designs\n       (pmap #(valid-design? available %))\n       (filter true?)\n       count))", :nextjournal/render-opts {:loc {:line 122, :end-line 127, :column 1, :end-column 15}, :id "solutions.2024.day19/part-1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day19/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2024.day19/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 287, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2024.day19/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}}, :nextjournal/blob-id "5dqtMiFtSzR2FwhocuvHp4jFA8CtcG"}, :nextjournal/render-opts {:id "solutions.2024.day19/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day19/markdown-5dtCSjwEQ7omTeVKjWXXFgZFcnBrjH"} ["h2" {:id "part-2"} [:<> "Part 2"]] [:p [:<> "Part 2 wants us to instead count all the combinations we can make"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "words from and sum them up"]]], :nextjournal/render-opts {:id "solutions.2024.day19/markdown-5dtCSjwEQ7omTeVKjWXXFgZFcnBrjH"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-2\n  [[available designs]]\n  (->> designs\n       (pmap #(count-combinations available %))\n       (apply +)))", :nextjournal/render-opts {:loc {:line 138, :end-line 142, :column 1, :end-column 19}, :id "solutions.2024.day19/part-2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day19/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP#2"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2024.day19/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP#2"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 571894474468161, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2024.day19/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}}, :nextjournal/blob-id "5dska2A2hxiywJy6VuNkY3o9My1zzN"}, :nextjournal/render-opts {:id "solutions.2024.day19/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}