{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Problem", :emoji nil, :path "#problem", :items []} {:title "Solution", :emoji nil, :path "#solution", :items [{:title "Functions", :emoji nil, :path "#functions", :items [{:title "prune", :emoji nil, :path "#prune", :items []} {:title "mix", :emoji nil, :path "#mix", :items []} {:title "evolve-step", :emoji nil, :path "#evolve-step", :items []} {:title "evolve", :emoji nil, :path "#evolve", :items []}]} {:title "Part 1", :emoji nil, :path "#part-1", :items []} {:title "Part 2", :emoji nil, :path "#part-2", :items []}]}], :nextjournal/render-opts {:toc-visibility true, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility true, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns solutions.2024.day22), :file "src/solutions/2024/day22.clj", :scope solutions.2024.day22, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://github.com/elken/aoc/blob/bd895bc5f8c90dd5410e8b3b0961957be484e2dd/src/solutions/2024/day22.clj"} "src/solutions/2024/day22.clj" [:<> "@" [:span.tabular-nums "bd895bc"]]]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Problem", :description "No grid!"}, :title "Problem", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day22/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"} ["h1" {:id "problem"} [:<> "Problem"]]], :nextjournal/render-opts {:id "solutions.2024.day22/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div {:dangerouslySetInnerHTML {:__html "<article class=\"day-desc\"><h2>--- Day 22: Monkey Market ---</h2><p>As you're all teleported deep into the jungle, a <a href=\"/2022/day/11\">monkey</a> steals The Historians' device! You'll need get it back while The Historians are looking for the Chief.</p>\n<p>The monkey that stole the device seems willing to trade it, but only in exchange for an absurd number of bananas. Your only option is to buy bananas on the Monkey Exchange Market.</p>\n<p>You aren't sure how the Monkey Exchange Market works, but one of The Historians senses trouble and comes over to help. Apparently, they've been studying these monkeys for a while and have deciphered their secrets.</p>\n<p>Today, the Market is full of monkeys buying <em>good hiding spots</em>. Fortunately, because of the time you recently spent in this jungle, you know lots of good hiding spots you can sell! If you sell enough hiding spots, you should be able to get enough bananas to buy the device back.</p>\n<p>On the Market, the buyers seem to use random prices, but their prices are actually only <a href=\"https://en.wikipedia.org/wiki/Pseudorandom_number_generator\" target=\"_blank\">pseudorandom</a>! If you know the secret of how they pick their prices, you can wait for the perfect time to sell.</p>\n<p>The part about secrets is literal, the Historian explains. Each buyer produces a pseudorandom sequence of secret numbers where each secret is derived from the previous.</p>\n<p>In particular, each buyer's <em>secret</em> number evolves into the next secret number in the sequence via the following process:</p>\n<ul>\n<li>Calculate the result of <em>multiplying the secret number by <code>64</code></em>. Then, <em>mix</em> this result into the secret number. Finally, <em>prune</em> the secret number.</li>\n<li>Calculate the result of <em>dividing the secret number by <code>32</code></em>. Round the result down to the nearest integer. Then, <em>mix</em> this result into the secret number. Finally, <em>prune</em> the secret number.</li>\n<li>Calculate the result of <em>multiplying the secret number by <code>2048</code></em>. Then, <em>mix</em> this result into the secret number. Finally, <em>prune</em> the secret number.</li>\n</ul>\n<p>Each step of the above process involves <em>mixing</em> and <em>pruning</em>:</p>\n<ul>\n<li>To <em>mix</em> a value into the secret number, calculate the <a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#XOR\" target=\"_blank\">bitwise XOR</a> of the given value and the secret number. Then, the secret number becomes the result of that operation. (If the secret number is <code>42</code> and you were to <em>mix</em> <code>15</code> into the secret number, the secret number would become <code>37</code>.)</li>\n<li>To <em>prune</em> the secret number, calculate the value of the secret number <a href=\"https://en.wikipedia.org/wiki/Modulo\" target=\"_blank\">modulo</a> <code>16777216</code>. Then, the secret number becomes the result of that operation. (If the secret number is <code>100000000</code> and you were to <em>prune</em> the secret number, the secret number would become <code>16113920</code>.)</li>\n</ul>\n<p>After this process completes, the buyer is left with the next secret number in the sequence. The buyer can repeat this process as many times as necessary to produce more secret numbers.</p>\n<p>So, if a buyer had a secret number of <code>123</code>, that buyer's next ten secret numbers would be:</p>\n<pre><code>15887950\n16495136\n527345\n704524\n1553684\n12683156\n11100544\n12249484\n7753432\n5908254\n</code></pre>\n<p>Each buyer uses their own secret number when choosing their price, so it's important to be able to predict the sequence of secret numbers for each buyer. Fortunately, the Historian's research has uncovered the <em>initial secret number of each buyer</em> (your puzzle input). For example:</p>\n<pre><code>1\n10\n100\n2024\n</code></pre>\n<p>This list describes the <em>initial secret number</em> of four different secret-hiding-spot-buyers on the Monkey Exchange Market. If you can simulate secret numbers from each buyer, you'll be able to predict all of their future prices.</p>\n<p>In a single day, buyers each have time to generate <code>2000</code> <em>new</em> secret numbers. In this example, for each buyer, their initial secret number and the 2000th new secret number they would generate are:</p>\n<pre><code>1: 8685429\n10: 4700978\n100: 15273692\n2024: 8667524\n</code></pre>\n<p>Adding up the 2000th new secret number for each buyer produces <code><em>37327623</em></code>.</p>\n<p>For each buyer, simulate the creation of 2000 new secret numbers. <em>What is the sum of the 2000th secret number generated by each buyer?</em></p>\n</article><article class=\"day-desc\"><h2 id=\"part2\">--- Part Two ---</h2><p>Of course, the secret numbers aren't the prices each buyer is offering! That would be <span title=\"Some might say it would be... bananas.\">ridiculous</span>. Instead, the <em>prices</em> the buyer offers are just the <em>ones digit</em> of each of their secret numbers.</p>\n<p>So, if a buyer starts with a secret number of <code>123</code>, that buyer's first ten <em>prices</em> would be:</p>\n<pre><code>3 (from 123)\n0 (from 15887950)\n6 (from 16495136)\n5 (etc.)\n4\n4\n6\n4\n4\n2\n</code></pre>\n<p>This price is the number of <em>bananas</em> that buyer is offering in exchange for your information about a new hiding spot. However, you still don't speak <a href=\"/2022/day/21\">monkey</a>, so you can't negotiate with the buyers directly. The Historian speaks a little, but not enough to negotiate; instead, he can ask another monkey to negotiate on your behalf.</p>\n<p>Unfortunately, the monkey only knows how to decide when to sell by looking at the <em>changes</em> in price. Specifically, the monkey will only look for a specific sequence of <em>four consecutive changes</em> in price, then immediately sell when it sees that sequence.</p>\n<p>So, if a buyer starts with a secret number of <code>123</code>, that buyer's first ten secret numbers, prices, and the associated changes would be:</p>\n<pre><code>     123: 3 \n15887950: 0 (-3)\n16495136: 6 (6)\n  527345: 5 (-1)\n  704524: 4 (-1)\n 1553684: 4 (0)\n12683156: 6 (2)\n11100544: 4 (-2)\n12249484: 4 (0)\n 7753432: 2 (-2)\n</code></pre>\n<p>Note that the first price has no associated change because there was no previous price to compare it with.</p>\n<p>In this short example, within just these first few prices, the highest price will be <code>6</code>, so it would be nice to give the monkey instructions that would make it sell at that time. The first <code>6</code> occurs after only two changes, so there's no way to instruct the monkey to sell then, but the second <code>6</code> occurs after the changes <code>-1,-1,0,2</code>. So, if you gave the monkey that sequence of changes, it would wait until the first time it sees that sequence and then immediately sell your hiding spot information at the current price, winning you <code>6</code> bananas.</p>\n<p>Each buyer only wants to buy one hiding spot, so after the hiding spot is sold, the monkey will move on to the next buyer. If the monkey <em>never</em> hears that sequence of price changes from a buyer, the monkey will never sell, and will instead just move on to the next buyer.</p>\n<p>Worse, you can only give the monkey <em>a single sequence</em> of four price changes to look for. You can't change the sequence between buyers.</p>\n<p>You're going to need as many bananas as possible, so you'll need to <em>determine which sequence</em> of four price changes will cause the monkey to get you the <em>most bananas overall</em>. Each buyer is going to generate <code>2000</code> secret numbers after their initial secret number, so, for each buyer, you'll have <em><code>2000</code> price changes</em> in which your sequence can occur.</p>\n<p>Suppose the initial secret number of each buyer is:</p>\n<pre><code>1\n2\n3\n2024\n</code></pre>\n<p>There are many sequences of four price changes you could tell the monkey, but for these four buyers, the sequence that will get you the most bananas is <code>-2,1,-1,3</code>. Using that sequence, the monkey will make the following sales:</p>\n<ul>\n<li>For the buyer with an initial secret number of <code>1</code>, changes <code>-2,1,-1,3</code> first occur when the price is <code><em>7</em></code>.</li>\n<li>For the buyer with initial secret <code>2</code>, changes <code>-2,1,-1,3</code> first occur when the price is <code><em>7</em></code>.</li>\n<li>For the buyer with initial secret <code>3</code>, the change sequence <code>-2,1,-1,3</code> <em>does not occur</em> in the first 2000 changes.</li>\n<li>For the buyer starting with <code>2024</code>, changes <code>-2,1,-1,3</code> first occur when the price is <code><em>9</em></code>.</li>\n</ul>\n<p>So, by asking the monkey to sell the first time each buyer's prices go down <code>2</code>, then up <code>1</code>, then down <code>1</code>, then up <code>3</code>, you would get <code><em>23</em></code> (<code>7 + 7 + 9</code>) bananas!</p>\n<p>Figure out the best sequence to tell the monkey so that by looking for that same sequence of changes in every buyer's future prices, you get the most bananas in total. <em>What is the most bananas you can get?</em></p>\n</article>"}}], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "solutions.2024.day22/anon-expr-5dr7nA33UXLJCTTSq93AJLcCNYfChz-result"}}, :nextjournal/blob-id "5dtoMFtRadgynFxQndmAVEv6GD9d1d"}, :nextjournal/render-opts {:id "solutions.2024.day22/anon-expr-5dr7nA33UXLJCTTSq93AJLcCNYfChz-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day22/markdown-5drd6hRBj2qG8wFtV83bnx9VeqWATy"} ["h1" {:id "solution"} [:<> "Solution"]] [:p [:<> "No grid!"]] [:p [:<> "Today was quite fun, part 1 was another \"if I was awake at 5am, I'd"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "be on the leaderboard\" day (well, if it weren't for all the AI"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "trolls... seriously, check the leaderboard times) but alas."]] [:p [:<> "Today has us computing a \"secret number\" by passing it through some"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "logic. I had the same realisation everyone else had (sadly, I"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "thought I was really smart for spotting it...) in that the"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "multiplication should actually be bit shifting instead since"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "they're powers of 2. Part 1 has us computing the 2000th steps for"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "our input list of numbers and part 2 has us doing something much"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "more complex that I'll explain when we get there."]] [:p [:<> "First things first, let's load our input and parse it"]]], :nextjournal/render-opts {:id "solutions.2024.day22/markdown-5drd6hRBj2qG8wFtV83bnx9VeqWATy"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def input (->> (slurp (io/resource \"inputs/2024/day22.txt\")) ;; Load the resource\n                str/split-lines                               ;; Split into lines\n                (map parse-long)))                            ;; Parse into numbers", :nextjournal/render-opts {:loc {:line 31, :end-line 33, :column 1, :end-column 35}, :id "solutions.2024.day22/input-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value 15718622, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 1], :nextjournal/value 6668234, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 2], :nextjournal/value 6091312, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 3], :nextjournal/value 5538579, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 4], :nextjournal/value 6689583, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 5], :nextjournal/value 1749794, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 6], :nextjournal/value 11489892, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 7], :nextjournal/value 622700, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 8], :nextjournal/value 5438800, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 9], :nextjournal/value 3800758, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 10], :nextjournal/value 2842007, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 11], :nextjournal/value 3124990, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 12], :nextjournal/value 5115507, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 13], :nextjournal/value 10882907, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 14], :nextjournal/value 8952749, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 15], :nextjournal/value 4235778, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 16], :nextjournal/value 10259703, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 17], :nextjournal/value 4714502, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 18], :nextjournal/value 3276415, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [1 19], :nextjournal/value 10937574, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:nextjournal/value {:n 20, :path [1], :total 2156, :offset 20}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}, :nextjournal/render-opts {:id "solutions.2024.day22/input-result-1"}}, :nextjournal/blob-id "5dt7Zbor624kRjQT1iT7Dx9ms9Y7F1"}, :nextjournal/render-opts {:id "solutions.2024.day22/input-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day22/markdown-5dtfqHaKabkLLv7up4o1grMU6kFNAk"} ["h2" {:id "functions"} [:<> "Functions"]] ["h3" {:id "prune"} [:<> "prune"]] [:p [:<> "Given a secret number, simply compute the mod against 16777216."] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "There's probably some significance to this number."]]], :nextjournal/render-opts {:id "solutions.2024.day22/markdown-5dtfqHaKabkLLv7up4o1grMU6kFNAk"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn prune [secret]\n  (mod secret 16777216))", :nextjournal/render-opts {:loc {:line 41, :end-line 42, :column 1, :end-column 25}, :id "solutions.2024.day22/prune-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day22/markdown-5dsaoWokxYMjyqnn2sbgDX6NBRbH6r"} ["h3" {:id "mix"} [:<> "mix"]] [:p [:<> "Compute a bitwise-xor against the previous result and the next one"]]], :nextjournal/render-opts {:id "solutions.2024.day22/markdown-5dsaoWokxYMjyqnn2sbgDX6NBRbH6r"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn mix [secret result]\n  (bit-xor result secret))", :nextjournal/render-opts {:loc {:line 47, :end-line 48, :column 1, :end-column 27}, :id "solutions.2024.day22/mix-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day22/markdown-5dswNspzKyRe86xaptV8W5xU7k8EGN"} ["h3" {:id "evolve-step"} [:<> "evolve-step"]] [:p [:<> "Given a secret number, compute the next one by computing all our"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "bit-shift rules (check the problem definition for what these"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "translate to)"]]], :nextjournal/render-opts {:id "solutions.2024.day22/markdown-5dswNspzKyRe86xaptV8W5xU7k8EGN"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn evolve-step [secret]\n  (reduce (fn [acc [shift-fn shift-amt]]\n            (prune\n             (mix (shift-fn acc shift-amt) acc)))\n          secret\n          [[bit-shift-left 6]\n           [bit-shift-right 5]\n           [bit-shift-left 11]]))", :nextjournal/render-opts {:loc {:line 55, :end-line 62, :column 1, :end-column 34}, :id "solutions.2024.day22/evolve-step-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day22/markdown-5duKmS8sjUNub8ENF8gVHovPwaRaEb"} ["h3" {:id "evolve"} [:<> "evolve"]] [:p [:<> "Given a secret number, compute the 2000th iteration of applying our"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "evolve-step function"]]], :nextjournal/render-opts {:id "solutions.2024.day22/markdown-5duKmS8sjUNub8ENF8gVHovPwaRaEb"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn evolve [secret]\n  (->> secret\n       evolve-step\n       (iterate evolve-step)\n       (take 2000)))", :nextjournal/render-opts {:loc {:line 68, :end-line 72, :column 1, :end-column 21}, :id "solutions.2024.day22/evolve-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day22/markdown-5dtQzF6wDD96sYTVBWeKF3QXmTUeER"} ["h2" {:id "part-1"} [:<> "Part 1"]] [:p [:<> "Part 1 just wants us to get all the evolutions and sum them up"]]], :nextjournal/render-opts {:id "solutions.2024.day22/markdown-5dtQzF6wDD96sYTVBWeKF3QXmTUeER"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-1\n  [input]\n  (->> input\n       (pmap evolve)\n       (map last)\n       (apply +)))", :nextjournal/render-opts {:loc {:line 77, :end-line 82, :column 1, :end-column 19}, :id "solutions.2024.day22/part-1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day22/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2024.day22/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 17960270302, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2024.day22/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}}, :nextjournal/blob-id "5dtt3ETgzYuDPhxiJ2mKCfVgF3Pfha"}, :nextjournal/render-opts {:id "solutions.2024.day22/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day22/markdown-5dsRYpkQD7TN9auNSswBX4d8ECENdH"} ["h2" {:id "part-2"} [:<> "Part 2"]] [:p [:<> "Part 2 was surprisingly meaty this time around."]] [:p [:<> "For each of our input numbers, we have to compute the following:"]] [:ul [:li [:<> [:<> "Get the same 2000 iterations from part 1"]]] [:li [:<> [:<> "Get the last digit of all of these (using "] [:code [:<> "mod n 10"]] [:<> ")"]]] [:li [:<> [:<> "Compute all the changes between these digits"]]]] [:p [:<> "Then given all our changes:"]] [:ul [:li [:<> [:<> "Create a sliding window of length 4"]]] [:li [:<> [:<> "If we've seen the pattern of 4 changes before, add them to our accumulator along with the price at that point"]]] [:li [:<> [:<> "Sum all these up"]]]] [:p [:<> "We can then just apply "] [:code [:<> "max-key val"]] [:<> " to get the \"winning\" sequence and return it"]]], :nextjournal/render-opts {:id "solutions.2024.day22/markdown-5dsRYpkQD7TN9auNSswBX4d8ECENdH"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-2 [input]\n  (->> input\n       (pmap (fn [secret]\n               (let [nums (evolve secret)\n                     prices (map #(mod % 10) nums)\n                     changes (map - (rest prices) prices)]\n                 (->> changes\n                      (partition 4 1)\n                      (map vector (drop 4 prices))\n                      (reduce (fn [acc [price pattern]]\n                                (if (contains? acc pattern)\n                                  acc\n                                  (assoc acc pattern price)))\n                              {})))))\n       (reduce (partial merge-with +))\n       (apply max-key val)\n       last))", :nextjournal/render-opts {:loc {:line 104, :end-line 120, :column 1, :end-column 14}, :id "solutions.2024.day22/part-2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2024.day22/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP#2"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2024.day22/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP#2"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 2042, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2024.day22/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}}, :nextjournal/blob-id "5dsQZGhnux6XdLjTrKtUUHUEatBUL6"}, :nextjournal/render-opts {:id "solutions.2024.day22/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}