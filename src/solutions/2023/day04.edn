{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Problem", :emoji nil, :path "#problem", :items []} {:title "Solution", :emoji nil, :path "#solution", :items [{:title "count-matches", :emoji nil, :path "#count-matches", :items []} {:title "Part 1", :emoji nil, :path "#part-1", :items []} {:title "Part 2", :emoji nil, :path "#part-2", :items []}]}], :nextjournal/render-opts {:toc-visibility true, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility true, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns solutions.2023.day04), :file "src/solutions/2023/day04.clj", :scope solutions.2023.day04, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://github.com/elken/aoc/blob/106afa3b06743c6097ab2f3955fb21e16153cb1d/src/solutions/2023/day04.clj"} "src/solutions/2023/day04.clj" [:<> "@" [:span.tabular-nums "106afa3"]]]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Problem", :description "Christ, I'm getting whiplash already."}, :title "Problem", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2023.day04/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"} ["h1" {:id "problem"} [:<> "Problem"]]], :nextjournal/render-opts {:id "solutions.2023.day04/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div {:dangerouslySetInnerHTML {:__html "<article class=\"day-desc\"><h2>--- Day 4: Scratchcards ---</h2><p>The gondola takes you up. Strangely, though, the ground doesn't seem to be coming with you; you're not climbing a mountain. As the circle of Snow Island recedes below you, an entire new landmass suddenly appears above you! The gondola carries you to the surface of the new island and lurches into the station.</p>\n<p>As you exit the gondola, the first thing you notice is that the air here is much <em>warmer</em> than it was on Snow Island. It's also quite <em>humid</em>. Is this where the water source is?</p>\n<p>The next thing you notice is an Elf sitting on the floor across the station in what seems to be a pile of colorful square cards.</p>\n<p>&quot;Oh! Hello!&quot; The Elf excitedly runs over to you. &quot;How may I be of service?&quot; You ask about water sources.</p>\n<p>&quot;I'm not sure; I just operate the gondola lift. That does sound like something we'd have, though - this is <em><span title=\"I find this way funnier than it has any right to be.\">Island Island</span></em>, after all! I bet the <em>gardener</em> would know. He's on a different island, though - er, the small kind surrounded by water, not the floating kind. We really need to come up with a better naming scheme. Tell you what: if you can help me with something quick, I'll let you <em>borrow my boat</em> and you can go visit the gardener. I got all these <a href=\"https://en.wikipedia.org/wiki/Scratchcard\" target=\"_blank\">scratchcards</a> as a gift, but I can't figure out what I've won.&quot;</p>\n<p>The Elf leads you over to the pile of colorful cards. There, you discover dozens of scratchcards, all with their opaque covering already scratched off. Picking one up, it looks like each card has two lists of numbers separated by a vertical bar (<code>|</code>): a list of <em>winning numbers</em> and then a list of <em>numbers you have</em>. You organize the information into a table (your puzzle input).</p>\n<p>As far as the Elf has been able to figure out, you have to figure out which of the <em>numbers you have</em> appear in the list of <em>winning numbers</em>. The first match makes the card worth <em>one point</em> and each match after the first <em>doubles</em> the point value of that card.</p>\n<p>For example:</p>\n<pre><code>Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53\nCard 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19\nCard 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1\nCard 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83\nCard 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36\nCard 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11\n</code></pre>\n<p>In the above example, card 1 has five winning numbers (<code>41</code>, <code>48</code>, <code>83</code>, <code>86</code>, and <code>17</code>) and eight numbers you have (<code>83</code>, <code>86</code>, <code>6</code>, <code>31</code>, <code>17</code>, <code>9</code>, <code>48</code>, and <code>53</code>). Of the numbers you have, four of them (<code>48</code>, <code>83</code>, <code>17</code>, and <code>86</code>) are winning numbers! That means card 1 is worth <code><em>8</em></code> points (1 for the first match, then doubled three times for each of the three matches after the first).</p>\n<ul>\n<li>Card 2 has two winning numbers (<code>32</code> and <code>61</code>), so it is worth <code><em>2</em></code> points.</li>\n<li>Card 3 has two winning numbers (<code>1</code> and <code>21</code>), so it is worth <code><em>2</em></code> points.</li>\n<li>Card 4 has one winning number (<code>84</code>), so it is worth <code><em>1</em></code> point.</li>\n<li>Card 5 has no winning numbers, so it is worth no points.</li>\n<li>Card 6 has no winning numbers, so it is worth no points.</li>\n</ul>\n<p>So, in this example, the Elf's pile of scratchcards is worth <code><em>13</em></code> points.</p>\n<p>Take a seat in the large pile of colorful cards. <em>How many points are they worth in total?</em></p>\n</article><article class=\"day-desc\"><h2 id=\"part2\">--- Part Two ---</h2><p>Just as you're about to report your findings to the Elf, one of you realizes that the rules have actually been printed on the back of every card this whole time.</p>\n<p>There's no such thing as &quot;points&quot;. Instead, scratchcards only cause you to <em>win more scratchcards</em> equal to the number of winning numbers you have.</p>\n<p>Specifically, you win <em>copies</em> of the scratchcards below the winning card equal to the number of matches. So, if card 10 were to have 5 matching numbers, you would win one copy each of cards 11, 12, 13, 14, and 15.</p>\n<p>Copies of scratchcards are scored like normal scratchcards and have the <em>same card number</em> as the card they copied. So, if you win a copy of card 10 and it has 5 matching numbers, it would then win a copy of the same cards that the original card 10 won: cards 11, 12, 13, 14, and 15. This process repeats until none of the copies cause you to win any more cards. (Cards will never make you copy a card past the end of the table.)</p>\n<p>This time, the above example goes differently:</p>\n<pre><code>Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53\nCard 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19\nCard 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1\nCard 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83\nCard 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36\nCard 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11\n</code></pre>\n<ul>\n<li>Card 1 has four matching numbers, so you win one copy each of the next four cards: cards 2, 3, 4, and 5.</li>\n<li>Your original card 2 has two matching numbers, so you win one copy each of cards 3 and 4.</li>\n<li>Your copy of card 2 also wins one copy each of cards 3 and 4.</li>\n<li>Your four instances of card 3 (one original and three copies) have two matching numbers, so you win <em>four</em> copies each of cards 4 and 5.</li>\n<li>Your eight instances of card 4 (one original and seven copies) have one matching number, so you win <em>eight</em> copies of card 5.</li>\n<li>Your fourteen instances of card 5 (one original and thirteen copies) have no matching numbers and win no more cards.</li>\n<li>Your one instance of card 6 (one original) has no matching numbers and wins no more cards.</li>\n</ul>\n<p>Once all of the originals and copies have been processed, you end up with <code><em>1</em></code> instance of card 1, <code><em>2</em></code> instances of card 2, <code><em>4</em></code> instances of card 3, <code><em>8</em></code> instances of card 4, <code><em>14</em></code> instances of card 5, and <code><em>1</em></code> instance of card 6. In total, this example pile of scratchcards causes you to ultimately have <code><em>30</em></code> scratchcards!</p>\n<p>Process all of the original and copied scratchcards until no more scratchcards are won. Including the original set of scratchcards, <em>how many total scratchcards do you end up with?</em></p>\n</article>"}}], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "solutions.2023.day04/anon-expr-5dr7xrdLENDLPgx5EK9Kcaq7e2dZCm-result"}}, :nextjournal/blob-id "5dtiw93WdDjnwSmtUAjDfbPC2AfSt9"}, :nextjournal/render-opts {:id "solutions.2023.day04/anon-expr-5dr7xrdLENDLPgx5EK9Kcaq7e2dZCm-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2023.day04/markdown-5dtueXfLxSmMcjsSit3DjbabF6iMpm"} ["h1" {:id "solution"} [:<> "Solution"]] [:p [:<> "Christ, I'm getting whiplash already."]] [:p [:em [:<> "This"]] [:<> " is what yesterday should have been."]] [:p [:<> "But anyway, today has us going through a list of scratchcard outcomes and"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "attempts. We have to get all the wins in both parts, part 1 wants us to get 1"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "point for 1 match then double it "] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value "(wins - 1)", :nextjournal/viewer {:name :nextjournal.markdown/formula, :render-fn #viewer-fn (fn [tex] (nextjournal.clerk.render/render-katex tex {:inline? true})), :hash "5dtTBivp9Yiw7XSqxv1opZHNencsu6"}}] [:<> " times; with part 2 wanting us"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "to have a win give a copy of the nth card (eg Card 1 wins 3 times, so we get"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "a copy of the next 3 cards) and we sum up the total cards."]] [:p [:<> "Today was stupidly simple on the surface, by the time I was done with my"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "morning routine I'd already solved part 1 in my head."]] [:p [:<> "First things first, let's load our input and parse it"]]], :nextjournal/render-opts {:id "solutions.2023.day04/markdown-5dtueXfLxSmMcjsSit3DjbabF6iMpm"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def input (->> (slurp (io/resource \"inputs/2023/day04.txt\")) ;; Load the resource\n                str/split-lines))                             ;; Split into lines", :nextjournal/render-opts {:loc {:line 32, :end-line 33, :column 1, :end-column 34}, :id "solutions.2023.day04/input-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value [{:path [1 0], :nextjournal/value ["Card   1: 13  4 61 82 80 41 31 53 50  2 | 38 89 26 79 94 50  2 74 31 92 80 41 13" {:nextjournal/value {:n 80, :path [1 0], :total 116, :offset 80, :replace-path [1 0 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 1], :nextjournal/value ["Card   2: 25 44 86 77 98 91 55 39 63 12 | 84 62 55 28 99 26 19 18 13 57 97 63 20" {:nextjournal/value {:n 80, :path [1 1], :total 116, :offset 80, :replace-path [1 1 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 2], :nextjournal/value ["Card   3: 96 46 60 19 82 25 41 29 38 94 | 43 82 86 74 16 15 92 46 32  3 17 30 42" {:nextjournal/value {:n 80, :path [1 2], :total 116, :offset 80, :replace-path [1 2 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 3], :nextjournal/value ["Card   4: 19 55 20 50 57 36 61 35 59 75 | 75 11 94 28 49 59 38 32 55 35 61 68 29" {:nextjournal/value {:n 80, :path [1 3], :total 116, :offset 80, :replace-path [1 3 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 4], :nextjournal/value ["Card   5: 63  6 84 48 45 55 43 86 33 60 | 68 99 84 24 23 39 48 87 60  1 12 43 21" {:nextjournal/value {:n 80, :path [1 4], :total 116, :offset 80, :replace-path [1 4 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 5], :nextjournal/value ["Card   6: 57 24 81 65 12 13 58 30 33  4 | 78 96 50 92  3 47 22 99 28 31 46 98 93" {:nextjournal/value {:n 80, :path [1 5], :total 116, :offset 80, :replace-path [1 5 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 6], :nextjournal/value ["Card   7: 68 80 65 13 23 61 28 77 42 47 | 76 93 52 13 61 65 21 14 68 81 79 47 11" {:nextjournal/value {:n 80, :path [1 6], :total 116, :offset 80, :replace-path [1 6 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 7], :nextjournal/value ["Card   8: 19 24 80 12 94 32 53 20 57 72 | 30  2 79 19 95 89 29  4 35 87 15 78 13" {:nextjournal/value {:n 80, :path [1 7], :total 116, :offset 80, :replace-path [1 7 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 8], :nextjournal/value ["Card   9: 28 30  5 92 48  7 54 39 90 31 | 10 93  6 42 41 66 40 90 56 54 48 47 87" {:nextjournal/value {:n 80, :path [1 8], :total 116, :offset 80, :replace-path [1 8 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 9], :nextjournal/value ["Card  10: 84 75 46 44 99 60 14 47 56  3 | 19 99 47 41 84 12 82 45 98 40 43 92 60" {:nextjournal/value {:n 80, :path [1 9], :total 116, :offset 80, :replace-path [1 9 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 10], :nextjournal/value ["Card  11: 45 52 83 35 91 66 11  9 38 71 | 45 21 22 29 18 77 41 38 53 11 48 57 70" {:nextjournal/value {:n 80, :path [1 10], :total 116, :offset 80, :replace-path [1 10 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 11], :nextjournal/value ["Card  12: 23 48  9  8 76 37 70 68 44 73 | 84 19 73 27 71 85 41 32  6 33 24 51 88" {:nextjournal/value {:n 80, :path [1 11], :total 116, :offset 80, :replace-path [1 11 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 12], :nextjournal/value ["Card  13: 32 44 71  5 45 72  6 16 78 90 | 38 90 13 44 71 62 45 22 16 72 33  6 85" {:nextjournal/value {:n 80, :path [1 12], :total 116, :offset 80, :replace-path [1 12 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 13], :nextjournal/value ["Card  14:  6 73 88 83 56 96 75 37 25 18 | 82 15 83 58 96  3 12 74 20 60 38 46 47" {:nextjournal/value {:n 80, :path [1 13], :total 116, :offset 80, :replace-path [1 13 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 14], :nextjournal/value ["Card  15: 43 69 37 16 50 19 24 54 78 18 | 41 46 39 31 75 90 67 84 56 86  1 27 93" {:nextjournal/value {:n 80, :path [1 14], :total 116, :offset 80, :replace-path [1 14 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 15], :nextjournal/value ["Card  16: 58  5 14 42 87 52 32 20 69 73 | 69 14 79 42 73 58  5  4 87 36 59 32 22" {:nextjournal/value {:n 80, :path [1 15], :total 116, :offset 80, :replace-path [1 15 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 16], :nextjournal/value ["Card  17: 37  8 85 57  7 93  4 29 31 28 | 55 20  4 29  8 40 57 37  2 60 31 46 68" {:nextjournal/value {:n 80, :path [1 16], :total 116, :offset 80, :replace-path [1 16 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 17], :nextjournal/value ["Card  18: 58 13 65  3 85 71 80  2 40  6 | 92 27 85  1 81 12 94 62 76 33 87 96 54" {:nextjournal/value {:n 80, :path [1 17], :total 116, :offset 80, :replace-path [1 17 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 18], :nextjournal/value ["Card  19: 87 82 44 17  8 29 18 84  6 39 | 97 55  6 14 69 12 32  5  2 59 44 18 93" {:nextjournal/value {:n 80, :path [1 18], :total 116, :offset 80, :replace-path [1 18 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:path [1 19], :nextjournal/value ["Card  20: 13 80 52 31 70  3 81 17 87 88 | 71 65 94 88 26 70 14 78 24  5 77 25 34" {:nextjournal/value {:n 80, :path [1 19], :total 116, :offset 80, :replace-path [1 19 80]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}} {:nextjournal/value {:n 20, :path [1], :total 208, :offset 20}, :nextjournal/viewer {:name nextjournal.clerk.viewer/elision-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-elision, :hash "5drduatKq2QJCDhSX1Pu45i4whSPHk"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/vector-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "[", :closing-paren ("]"), :page-size 20, :hash "5dsD1KJESfc8Dy8gPeGQfZCX2ayE8f"}, :nextjournal/render-opts {:id "solutions.2023.day04/input-result-1"}}, :nextjournal/blob-id "5dqsBN1tT6mqJKwSxdUYEjVEt9NfCa"}, :nextjournal/render-opts {:id "solutions.2023.day04/input-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2023.day04/markdown-5drYus2RnuMeH9AJzwLdQoKFSRiQyg"} ["h2" {:id "count-matches"} [:<> "count-matches"]] [:p [:<> "The only function we need, a regex to capture a number then use lookahead to"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "see if it occurs again; crucially ignoring the card number."]]], :nextjournal/render-opts {:id "solutions.2023.day04/markdown-5drYus2RnuMeH9AJzwLdQoKFSRiQyg"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn count-matches [line]\n  (count\n   (re-seq\n    #\"\\b(\\d+)\\b(?=.*\\b\\1\\b)\"\n    (last (str/split line #\": \")))))", :nextjournal/render-opts {:loc {:line 39, :end-line 43, :column 1, :end-column 37}, :id "solutions.2023.day04/count-matches-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2023.day04/markdown-5dsn6HWwPhGJbtR2FwYmQdJp94yRwz"} ["h2" {:id "part-1"} [:<> "Part 1"]] [:p [:<> "No general solution for this one, it's quite simple."]] [:p [:<> "We map over all the lines, get the matches for each line; then if the matches"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "is over 1 we generate an infinite sequence of all the number doubled and get"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "the index at "] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value "n - 1", :nextjournal/viewer {:name :nextjournal.markdown/formula, :render-fn #viewer-fn (fn [tex] (nextjournal.clerk.render/render-katex tex {:inline? true})), :hash "5dtTBivp9Yiw7XSqxv1opZHNencsu6"}}] [:<> " (since we "] [:em [:<> "start"]] [:<> " at 1)"]]], :nextjournal/render-opts {:id "solutions.2023.day04/markdown-5dsn6HWwPhGJbtR2FwYmQdJp94yRwz"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-1\n  [input]\n  (->> input\n       (map\n        (fn [line]\n          (let [matches (count-matches line)]\n            (if (> 1 matches)\n              matches\n              (nth\n               (iterate #(* 2 %) 1)\n               (dec matches))))))\n       (reduce +)))", :nextjournal/render-opts {:loc {:line 52, :end-line 63, :column 1, :end-column 20}, :id "solutions.2023.day04/part-1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2023.day04/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2023.day04/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 24848, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2023.day04/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}}, :nextjournal/blob-id "5dsRo5jg9KnFhCsAEm762w3jspvKPQ"}, :nextjournal/render-opts {:id "solutions.2023.day04/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2023.day04/markdown-5dtrVKcN2gT9fEkzeAB9UidFoTMR7p"} ["h2" {:id "part-2"} [:<> "Part 2"]] [:p [:<> "Part 2 is more involved, and had me scratching my head for a little bit"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "trying to solve everything with 1 reduction. I caved, and we ended up here."]] [:p [:<> "We reduce over the input with an init vector of 1s for every line (since we"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "start with 1 copy of all the cards), compute the matches as normal, then"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "reduce over a range of the next card to either the end or "] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value "(n + 1) + matches", :nextjournal/viewer {:name :nextjournal.markdown/formula, :render-fn #viewer-fn (fn [tex] (nextjournal.clerk.render/render-katex tex {:inline? true})), :hash "5dtTBivp9Yiw7XSqxv1opZHNencsu6"}}] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "to update each value within the accumulator (the total count of instances)"]] [:p [:<> "Once we have this, it's just a simple "] [:code [:<> "reduce +"]]]], :nextjournal/render-opts {:id "solutions.2023.day04/markdown-5dtrVKcN2gT9fEkzeAB9UidFoTMR7p"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-2\n  [input]\n  (->> input\n       (reduce-kv\n        (fn [cards idx line]\n          (let [matches (count-matches line)]\n            (reduce (fn [acc row]\n                      (update acc row (partial + (acc idx))))\n                    cards\n                    (range (inc idx) (min (count cards) (+ (inc idx) matches))))))\n        (vec (repeat (count input) 1)))\n       (reduce +)))", :nextjournal/render-opts {:loc {:line 81, :end-line 92, :column 1, :end-column 20}, :id "solutions.2023.day04/part-2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2023.day04/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP#2"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2023.day04/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP#2"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 7258152, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2023.day04/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}}, :nextjournal/blob-id "5dsZ54Wq6rnEYQTrzJvVxFzHCeGhrA"}, :nextjournal/render-opts {:id "solutions.2023.day04/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}