{:path [], :nextjournal/value {:package :directory, :toc {:path [], :nextjournal/value [{:title "Problem", :emoji nil, :path "#problem", :items []} {:title "Solution", :emoji nil, :path "#solution", :items [{:title "Functions", :emoji nil, :path "#functions", :items [{:title "compute-next", :emoji nil, :path "#compute-next", :items []} {:title "solve", :emoji nil, :path "#solve", :items []}]} {:title "Part 1", :emoji nil, :path "#part-1", :items []} {:title "Part 2", :emoji nil, :path "#part-2", :items []}]}], :nextjournal/render-opts {:toc-visibility true, :set-hash? true}, :nextjournal/viewer {:name nextjournal.clerk.viewer/toc-viewer, :render-fn #viewer-fn nextjournal.clerk.render.navbar/render-items, :hash "5dtesrAmYqLZQQHSMEfFTNpmLtY4nC"}}, :sidenotes? false, :toc-visibility true, :atom-var-name->state #viewer-eval (nextjournal.clerk.render/intern-atoms! {}), :ns #viewer-eval (ns solutions.2015.day10), :file "src/solutions/2015/day10.clj", :scope solutions.2015.day10, :header {:path [], :nextjournal/value [:div.viewer.w-full.max-w-prose.px-8.not-prose.mt-3 [:div.mb-8.text-xs.sans-serif.text-slate-400 nil [:<> [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "./../../../../"} "Index"] [:span.mx-2 "â€¢"]] [:span "Generated with " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://clerk.vision"} "Clerk"] [:<> " from " [:a.font-medium.border-b.border-dotted.border-slate-300.hover:text-indigo-500.hover:border-indigo-500.dark:border-slate-500.dark:hover:text-white.dark:hover:border-white.transition {:href "https://github.com/elken/aoc/blob/274002b8ffb1291f378656ee0bcdd5008050081c/src/solutions/2015/day10.clj"} "src/solutions/2015/day10.clj" [:<> "@" [:span.tabular-nums "274002b"]]]]]]], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}, :open-graph {:type "article:clerk", :title "Problem", :description "There seems to be a trend of some of these problems being almost built for clojure."}, :title "Problem", :blocks [{:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2015.day10/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"} ["h1" {:id "problem"} [:<> "Problem"]]], :nextjournal/render-opts {:id "solutions.2015.day10/markdown-5ds36HZHZS6qM55TdPCvGd8qKTHtED"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [:div {:dangerouslySetInnerHTML {:__html "<article class=\"day-desc\"><h2>--- Day 10: Elves Look, Elves Say ---</h2><p>Today, the Elves are playing a game called <a href=\"https://en.wikipedia.org/wiki/Look-and-say_sequence\">look-and-say</a>.  They take turns making sequences by reading aloud the previous sequence and using that reading as the next sequence.  For example, <code>211</code> is read as &quot;one two, two ones&quot;, which becomes <code>1221</code> (<code>1</code> <code>2</code>, <code>2</code> <code>1</code>s).</p>\n<p>Look-and-say sequences are generated iteratively, using the previous value as input for the next step.  For each step, take the previous value, and replace each run of digits (like <code>111</code>) with the number of digits (<code>3</code>) followed by the digit itself (<code>1</code>).</p>\n<p>For example:</p>\n<ul>\n<li><code>1</code> becomes <code>11</code> (<code>1</code> copy of digit <code>1</code>).</li>\n<li><code>11</code> becomes <code>21</code> (<code>2</code> copies of digit <code>1</code>).</li>\n<li><code>21</code> becomes <code>1211</code> (one <code>2</code> followed by one <code>1</code>).</li>\n<li><code>1211</code> becomes <code>111221</code> (one <code>1</code>, one <code>2</code>, and two <code>1</code>s).</li>\n<li><code>111221</code> becomes <code>312211</code> (three <code>1</code>s, two <code>2</code>s, and one <code>1</code>).</li>\n</ul>\n<p>Starting with the digits in your puzzle input, apply this process 40 times.  What is <em>the length of the result</em>?</p>\n</article><article class=\"day-desc\"><h2 id=\"part2\">--- Part Two ---</h2><p>Neat, right? You might also enjoy hearing <a href=\"https://www.youtube.com/watch?v=ea7lJkEhytA\">John Conway talking about this sequence</a> (that's Conway of <em>Conway's Game of Life</em> fame).</p>\n<p>Now, starting again with the digits in your puzzle input, apply this process <em title=\"Only because any longer started taking alarmingly long on my test hardware, and I wanted to avoid excluding people.\">50</em> times.  What is <em>the length of the new result</em>?</p>\n</article>"}}], :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}, :nextjournal/render-opts {:id "solutions.2015.day10/anon-expr-5drwbsGHuzqtCEPjDGkHnwb4c2AqHs-result"}}, :nextjournal/blob-id "5dsZVWRESenoKedGEsZSTNbSMZfPLx"}, :nextjournal/render-opts {:id "solutions.2015.day10/anon-expr-5drwbsGHuzqtCEPjDGkHnwb4c2AqHs-result"}, :nextjournal/visibility {:code :hide, :result :show}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2015.day10/markdown-5dszyMVUD72sVgdwscEUa9XZxUQWnt"} ["h1" {:id "solution"} [:<> "Solution"]] [:p [:<> "There seems to be a trend of some of these problems being almost built for clojure."]] [:p [:<> "I started down a rabbit hole of "] [:code [:<> "frequencies"]] [:<> " before realising how"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "to read; and ended up with a far simpler solution anyway..."]] [:p [:<> "Today's problem has us parsing a \"look-and-say\" sequence "] [:code [:<> "n"]] [:<> " number"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "of times, 40 for part 1 and 50 for part 2."]] [:p [:<> "By that, you take a string and \"say\" what it is; so given the"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "example \"1211\" you have \"one one, one two, two one's\" which then"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "becomes 111221."]] [:p [:<> "First things first, let's load our input and parse it"]]], :nextjournal/render-opts {:id "solutions.2015.day10/markdown-5dszyMVUD72sVgdwscEUa9XZxUQWnt"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(def input (->> (slurp (io/resource \"inputs/2015/day10.txt\")) ;; Load the resource\n                str/trim))                                    ;; Trim the newline", :nextjournal/render-opts {:loc {:line 29, :end-line 30, :column 1, :end-column 27}, :id "solutions.2015.day10/input-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}} {:path [1], :nextjournal/value {:nextjournal/presented {:path [1], :nextjournal/value "3113322113", :nextjournal/viewer {:name nextjournal.clerk.viewer/string-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-quoted-string, :opening-paren "\"", :closing-paren ("\""), :page-size 80, :hash "5dsDiKZaSjZpuyav79P69dRKiDtE2s"}, :nextjournal/render-opts {:id "solutions.2015.day10/input-result-1"}}, :nextjournal/blob-id "5dstHAF4UkzMxHdC7x9kLuK67JvxoM"}, :nextjournal/render-opts {:id "solutions.2015.day10/input-result-1"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2015.day10/markdown-5dsEqxC1tFbZUobavG7hcdDc127Fnw"} ["h2" {:id "functions"} [:<> "Functions"]] ["h3" {:id "compute-next"} [:<> "compute-next"]] [:p [:<> "Computing the next iteration is all we really do here."]] [:p [:<> "We start by partitioning the input by identity, which gives us the"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "sequence split into unique numbers:"]]], :nextjournal/render-opts {:id "solutions.2015.day10/markdown-5dsEqxC1tFbZUobavG7hcdDc127Fnw"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [{:path [0 0], :nextjournal/value [{:path [0 0 0], :nextjournal/value \3, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}} {:path [0 1], :nextjournal/value [{:path [0 1 0], :nextjournal/value \1, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [0 1 1], :nextjournal/value \1, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}} {:path [0 2], :nextjournal/value [{:path [0 2 0], :nextjournal/value \3, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [0 2 1], :nextjournal/value \3, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}} {:path [0 3], :nextjournal/value [{:path [0 3 0], :nextjournal/value \2, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [0 3 1], :nextjournal/value \2, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}} {:path [0 4], :nextjournal/value [{:path [0 4 0], :nextjournal/value \1, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [0 4 1], :nextjournal/value \1, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}} {:path [0 5], :nextjournal/value [{:path [0 5 0], :nextjournal/value \3, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")" ")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}, :nextjournal/render-opts {:id "solutions.2015.day10/anon-expr-5dt3qaCCzVcZwW1knDfnKjYqyVeeZQ-result"}}, :nextjournal/blob-id "5dt5WbDN9rFoFenR2hThNBTiC84XdY"}, :nextjournal/render-opts {:id "solutions.2015.day10/anon-expr-5dt3qaCCzVcZwW1knDfnKjYqyVeeZQ-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2015.day10/markdown-5dr8F93UQ6dCzgihBvQ4DYYNcQg4zZ"} [:p [:<> "Next we use "] [:code [:<> "mapcat"]] [:<> " to "] [:code [:<> "map"]] [:<> " over each unique set of numbers and"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "produce the "] [:code [:<> "count"]] [:<> " and the "] [:code [:<> "first"]] [:<> " element:"]]], :nextjournal/render-opts {:id "solutions.2015.day10/markdown-5dr8F93UQ6dCzgihBvQ4DYYNcQg4zZ"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value [{:path [0 0], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [0 1], :nextjournal/value \3, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [0 2], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [0 3], :nextjournal/value \1, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [0 4], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [0 5], :nextjournal/value \3, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [0 6], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [0 7], :nextjournal/value \2, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [0 8], :nextjournal/value 2, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [0 9], :nextjournal/value \1, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}} {:path [0 10], :nextjournal/value 1, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}} {:path [0 11], :nextjournal/value \3, :nextjournal/viewer {:name nextjournal.clerk.viewer/char-viewer, :render-fn #viewer-fn (fn [c] [:span.cmt-string.inspected-value "\\" c]), :hash "5dsrwEui5XWfykYe6nKV94coAm8X5X"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/sequential-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-coll, :opening-paren "(", :closing-paren (")"), :page-size 20, :hash "5dsgY1QgV2KqnvvrRRC3HXgCeF3Qge"}, :nextjournal/render-opts {:id "solutions.2015.day10/anon-expr-5drRTxzyMKFjKkDys59aBarWN18K1K-result"}}, :nextjournal/blob-id "5dskbr6L5jE9V3Z9wQwnx9QUQoq24m"}, :nextjournal/render-opts {:id "solutions.2015.day10/anon-expr-5drRTxzyMKFjKkDys59aBarWN18K1K-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2015.day10/markdown-5du86wpgwKzbLQCYNd5e9WzGJRWiWR"} [:p [:<> "And finally we convert to a string to make the parsing in huge"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "lists simpler."]]], :nextjournal/render-opts {:id "solutions.2015.day10/markdown-5du86wpgwKzbLQCYNd5e9WzGJRWiWR"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn compute-next [input]\n  (->> input\n       (partition-by identity) \n       (mapcat (juxt count first))\n       (apply str)))", :nextjournal/render-opts {:loc {:line 49, :end-line 53, :column 1, :end-column 21}, :id "solutions.2015.day10/compute-next-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2015.day10/markdown-5drMc4hJMzMVwF19LbSuRUNv6rhFHk"} ["h3" {:id "solve"} [:<> "solve"]] [:p [:<> "Both parts are the same, only differing on how many iterations to"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "perform; so we have a general solver to take the limit and "] [:code [:<> "inc"]] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "it (since the first iteration would just be the value itself) and"] [#viewer-eval nextjournal.clerk.render/inspect-presented {:nextjournal/value [:<> " "], :nextjournal/viewer {:name nextjournal.clerk.viewer/html-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-html, :hash "5drpr3yzJ1CcHNbRHnK2sVyn7YUmXB"}}] [:<> "count the last element."]]], :nextjournal/render-opts {:id "solutions.2015.day10/markdown-5drMc4hJMzMVwF19LbSuRUNv6rhFHk"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn solve [input limit]\n  (->> input\n       (iterate compute-next)\n       (take (inc limit))\n       last\n       count))", :nextjournal/render-opts {:loc {:line 60, :end-line 65, :column 1, :end-column 15}, :id "solutions.2015.day10/solve-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2015.day10/markdown-5drLdDxGgpF97c2tBEaLgPcbqd26bT"} ["h2" {:id "part-1"} [:<> "Part 1"]] [:p [:<> "Part 1 wants 40 iterations"]]], :nextjournal/render-opts {:id "solutions.2015.day10/markdown-5drLdDxGgpF97c2tBEaLgPcbqd26bT"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-1\n  [input]\n  (solve input 40))", :nextjournal/render-opts {:loc {:line 69, :end-line 71, :column 1, :end-column 20}, :id "solutions.2015.day10/part-1-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2015.day10/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2015.day10/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 329356, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2015.day10/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}}, :nextjournal/blob-id "5ds9szAxu3ymjqrinQmCTPyyczTiiK"}, :nextjournal/render-opts {:id "solutions.2015.day10/anon-expr-5drUsQ22xwHc3Gv6AMNny3M7ZMRamo-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2015.day10/markdown-5dsS2342nHcVreB7BZnBcByEVhrEmv"} ["h2" {:id "part-2"} [:<> "Part 2"]] [:p [:<> "And part 2 wants 50 iterations"]]], :nextjournal/render-opts {:id "solutions.2015.day10/markdown-5dsS2342nHcVreB7BZnBcByEVhrEmv"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value "(defn part-2\n  [input]\n  (solve input 50))", :nextjournal/render-opts {:loc {:line 80, :end-line 82, :column 1, :end-column 20}, :id "solutions.2015.day10/part-2-code"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/code-block-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-code-block, :hash "5dru1FUcVRTRrVKJFbNw4FG2wXmiwB"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}} {:path [], :nextjournal/value [:div.viewer.markdown-viewer.w-full.max-w-prose.px-8 {:data-block-id "solutions.2015.day10/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP#2"} [:p [:<> "Which gives our answer"]]], :nextjournal/render-opts {:id "solutions.2015.day10/markdown-5dspMqxdw3uNK6Pgan8eaYi57sm4wP#2"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/markdown-node-viewer, :render-fn #viewer-fn identity, :hash "5dsg4Bx9A9L7WvvCgamUoRtxUsmYCe"}} {:path [], :nextjournal/value [{:path [0], :nextjournal/value {:nextjournal/presented {:path [0], :nextjournal/value 4666278, :nextjournal/viewer {:name nextjournal.clerk.viewer/number-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-number, :hash "5dr3R1ZvHCoRHpxsQq4D4ARv9BQC7o"}, :nextjournal/render-opts {:id "solutions.2015.day10/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}}, :nextjournal/blob-id "5dsaEacURTqCZrs8Gp8VxuUuVG1eUR"}, :nextjournal/render-opts {:id "solutions.2015.day10/anon-expr-5drSLjzJKqUNZcXC2xeU8LJN9ciiDa-result"}, :nextjournal/viewer {:name nextjournal.clerk.viewer/result-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-result, :hash "5dtGVHesd2XCTLFYF3aY4kJvkrX1x1"}}], :nextjournal/viewer {:name nextjournal.clerk.viewer/cell-viewer, :render-fn #viewer-fn (fn [xs opts] (into [:<>] (nextjournal.clerk.render/inspect-children opts) xs)), :hash "5dtX6xLh3vbeFdswBY6jLXmB8QTqo2"}}]}, :nextjournal/viewer {:name nextjournal.clerk.viewer/notebook-viewer, :render-fn #viewer-fn nextjournal.clerk.render/render-notebook, :hash "5duAFDxE4sCnRX71Wo6zeCpC9C3djE"}}